*+--------------------------------------------------------------------+    1
*|  FUNCTION:                                                         |    2
*|    DYNAMICALLY ALLOCATE/DEALLOCATE A DATSET.                       |    3
*|  LOGIC:                                                            |    4
*|    1)  INVOKE FINDPARM ROUTINE AGAINST USER-SUPPLIED PARMS         |    5
*|        BUILDING TEXTUNITS FOR DYNALLOC IN USER STORAGE.            |    6
*|    2)  ISSUE SVC 99                                                |    7
*|  INPUTS:                                                           |    8
*|    R1 - PARMLIST MAPPED BY DYNPRM MACRO.                           |    9
*|  OUTPUTS:                                                          |   10
*|    R1 - PARMLIST MAPPED BY DYNPRM MACRO.                           |   11
*|   R15 - RETURN CODE                                                |   12
*|          0 = SVC99 PROCESSING HAS BEEN SUCCESSFUL.                 |   13
*|          4 = NOT USED                                              |   14
*|          8 = NOT USED                                              |   15
*|         12 = NOT USED                                              |   16
*|         16 = USER PARMLIST ERROR - R0 CONTAINS:                    |   17
*|               4 = ERROR IN FUNCTION CODE                           |   18
*|               8 = ERROR IN DISP=                                   |   19
*|              12 = ERROR IN SPACE=(XXX(                             |   20
*|              16 = ERROR IN SPACE=(...(XXX,                         |   21
*|              20 = ERROR IN SPACE=(...(,,XXX                        |   22
*|                  24 = ERROR IN DCB=RECFM                           |   23
*|                  28 = ERROR IN DCB=LRECL                           |   24
*|         20 = SVC 99 FAILED - R0 CONTAINS:                          |   25
*|                  +-----------+------------+                        |   26
*|                  | S99ERROR  | S99INFO    |                        |   27
*|                  +-----------+------------+                        |   28
*|                  0     1     2      3                              |   29
*|                  IF RC = 20, THE FOLLOWING PARMLIST FIELDS         |   30
*|                  ARE ALSO RETURNED:                                |   31
*|                      DYRETURN  = 14                                |   32
*|                      DYREASON  = THE CONTENTS OF R0                |   33
*|                      DY99ERR   = RETUNED BY SVC 99 (SEE MANUAL)    |   34
*|  ATTRIBUTES:                                                       |   35
*|    AMODE 24, AMODE 24, REENTRANT                                   |   36
*+--------------------------------------------------------------------+   37
*+--------------------------------------------------------------------+
*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |
*|                                                                    |
*|  Address questions to: mmarx@mdpaladin.com                         |
*|                                                                    |
*|  Permission is hereby granted, free of charge, to any person       |
*|  obtaining a copy of this software and associated documentation    |
*|  files (the "Software"), to deal in the Software without           |
*|  restriction, including without limitation the rights to use,      |
*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |
*|  copies of the Software, and to permit persons to whom the         |
*|  Software is furnished to do so, subject to the following          |
*|  conditions:                                                       |
*|                                                                    |
*|  The above copyright notice and this permission notice shall be    |
*|  included in all copies or substantial portions of the Software.   |
*|                                                                    |
*|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   |
*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |
*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |
*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |
*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |
*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |
*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |
*|  OTHER DEALINGS IN THE SOFTWARE.                                   |
*+--------------------------------------------------------------------+
         MODULE DYNAL,BASE=12,LOC=BELOW,AMODE=24,RMODE=24,             X  38
               TEXT='DYNAMIC ALLOCATION/UNALLOCATION OF A DATASET'        39
         L     R8,0(R1)           A(PARMLIST) => R8                       40
         USING DYNPRM,R8          MAP INPUT PARMLIST                      41
*---------------------------------------------------------------------*   42
*        BUILD DYNALLOC RB AND ANCHOR TEXT UNITS                      *   43
*---------------------------------------------------------------------*   44
         LA    R3,RB99            ADDRESS OF SVC 99 RB                    45
         USING S99RB,R3           MAP SVC 99 RB                           46
         ST    R3,RBPT99          PUT A(SVC 99 RB) INTO RB POINTER        47
         OI    RBPT99,S99RBPND    SET FLAG IN RB POINTER                  48
*                                 SET SVC 99 RB TO X'00'                  49
         XC    S99RB(S99RBLEN),S99RB                                      50
         MVI   S99RBLN,S99RBLEN   PUT LENGTH IN RB                        51
*        *---------------------------------------*                        52
*        *     SET FUNCTION CODE                 *                        53
*        *---------------------------------------*                        54
         LA    R9,DYFUNCT         A(INPUT PARM)                           55
         LA    R1,FUNCTB          A(TABLE OF VALID PARMS)                 56
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             57
         LTR   R15,R15            IS L'OUTPUT PARM = 0                    58
         BNZ   SETFUNCT           NO; PARM IS IN TABLE                    59
*                                 DEFAULT FUNCTION IS ALLOCATE            60
         MVC   DYFUNCT(L'DYFUNCT),AL                                      61
         LA    R9,DYFUNCT         A(INPUT PARM)                           62
         LA    R1,FUNCTB          A(TABLE OF VALID PARMS)                 63
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             64
SETFUNCT DS    0H                                                         65
*                                 MOVE PARM FROM TABLE                    66
         MVC   S99VERB(L'S99VERB),0(R9)                                   67
         LA    R4,TXPT99          A(FIRST TEXT POINTER)                   68
         ST    R4,S99TXTPP        PUT IN RB                               69
         LA    R4,TXPT99-4        POINT 4 BYTES BEFORE FIRST POINTER      70
         USING S99TUPL,R4         MAP POINTER LIST ENTRY                  71
         LA    R5,TXTUNITS        A(TEXT UNITS) IN REENTERABLE STG        72
*---------------------------------------------------------------------*   73
*        MOVE TEXT UNIT MODELS TO REENTERABLE STORAGE                 *   74
*             AND FILL IN FIELDS FROM INPUT PARMLIST                  *   75
*---------------------------------------------------------------------*   76
         CLC   DYFUNCT(L'DYFUNCT),AL IS THIS AN ALLOCATE FUNCTION         77
         BNE   NOTALLOC              NO; USE OTHER TEXT UNITS             78
*---------------------------------------------------------------------*   79
*        TEXT UNITS FOR ALLOCATE FUNCTION                             *   80
*---------------------------------------------------------------------*   81
*        *---------------------------------------*                        82
*        *     DISP=(XXX,                        *                        83
*        *---------------------------------------*                        84
DISPOK   DS    0H                                                         85
         LA    R9,DYDISP          A(INPUT PARM)                           86
         LA    R1,STATB           A(TABLE OF VALID PARMS)                 87
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             88
         LTR   R15,R15            IS L'OUTPUT PARM = 0                    89
         BNZ   SETSTAT            NO; PARM IS IN TABLE                    90
*                                 SET DEFAULT TO SHR                      91
         MVC   DYDISP(L'DYDISP),SHRDISP                                   92
         LA    R9,DYDISP          A(INPUT PARM)                           93
         LA    R1,STATB           A(TABLE OF VALID PARMS)                 94
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS             95
SETSTAT  DS    0H                                                         96
         LA    R7,STATS           TEXTUNIT MODEL                          97
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                          98
*        *---------------------------------------*                        99
*        *     DDNAME                            *                       100
*        *---------------------------------------*                       101
         LA    R9,DYDDNAME        ADDRESS OF FIELD IN INPUT PARMLIST     102
         LA    R7,DDNAM           TEXTUNIT MODEL                         103
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         104
*        *---------------------------------------*                       105
*        *     DSNAME                            *                       106
*        *---------------------------------------*                       107
         LA    R9,DYDSN           ADDRESS OF FIELD IN INPUT PARMLIST     108
         LA    R7,DSNAM           TEXTUNIT MODEL                         109
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         110
*        *---------------------------------------*                       111
*        *     ABNORMAL TERM DISPOSTITION        *                       112
*        *---------------------------------------*                       113
         LA    R9,DYCDISP         A(INPUT PARM)                          114
         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                115
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            116
         LTR   R15,R15            IS L'OUTPUT PARM = 0                   117
         BZ    NOCDISP            YES; SKIP THIS                         118
         LA    R7,CDISP           TEXTUNIT MODEL                         119
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         120
NOCDISP  DS    0H                                                        121
*                                 IS IT DISP=(NEW,     ?                 122
         CLC   DYDISP(L'DYDISP),NEWDISP                                  123
         BE    ISNEW                                                     124
*        *---------------------------------------*                       125
*        *     NORMAL TERM DISPOSTITION          *                       126
*        *---------------------------------------*                       127
         LA    R9,DYNDISP         A(INPUT PARM)                          128
         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                129
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            130
         LTR   R15,R15            L'OUTPUT PARM ¬= 0                     131
         BNZ   NONDISP            YES; USE FROM PARMLIST                 132
*                                 DEFAULT IS CATLG                       133
         MVC   DYNDISP(L'DYNDISP),KEEP                                   134
         LA    R9,DYNDISP         A(INPUT PARM)                          135
         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                136
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            137
NONDISP  DS    0H                                                        138
         LA    R7,NDISP           TEXTUNIT MODEL                         139
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         140
         B     ENDUNITS           NO ; SKIP OTHER TEXT UNITS             141
ISNEW    DS    0H                                                        142
*---------------------------------------------------------------------*  143
*        ALLOCATION UNITS FOR DISP=(NEW,  DATASETS                    *  144
*---------------------------------------------------------------------*  145
*        *---------------------------------------*                       146
*        *     NORMAL TERM DISPOSTITION          *                       147
*        *---------------------------------------*                       148
         LA    R9,DYNDISP         A(INPUT PARM)                          149
         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                150
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            151
         LTR   R15,R15            L'OUTPUT PARM ¬= 0                     152
         BNZ   NONDISP1           YES; USE FROM PARMLIST                 153
*                                 DEFAULT IS CATLG                       154
         MVC   DYNDISP(L'DYNDISP),CATLG                                  155
         LA    R9,DYNDISP         A(INPUT PARM)                          156
         LA    R1,DISPTB          A(TABLE OF VALID PARMS)                157
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            158
NONDISP1 DS    0H                                                        159
         LA    R7,NDISP           TEXTUNIT MODEL                         160
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         161
*        *---------------------------------------*                       162
*        *     UNIT=                             *                       163
*        *---------------------------------------*                       164
         LA    R9,DYUNIT          ADDRESS OF FIELD IN INPUT PARMLIST     165
         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  166
         BE    SETUNITD           YES; SET UNIT DEFAULT                  167
         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  168
         BNE   UNITOK             NO ; USE INPUT PARM AS IS              169
SETUNITD DS    0H                                                        170
         MVC   DYUNIT(L'DYUNIT),UDFLT   SET DEFAULT                      171
UNITOK   DS    0H                                                        172
         LA    R7,UNIT            TEXTUNIT MODEL                         173
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         174
*        *---------------------------------------*                       175
*        *     VOL=SER=                          *                       176
*        *---------------------------------------*                       177
         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  178
         BE    NOVOL              YES; BYPASS THIS TEXT UNIT             179
         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  180
         BE    NOVOL              YES; BYPASS THIS TEXT UNIT             181
         LA    R9,DYVOLSER        ADDRESS OF FIELD IN INPUT PARMLIST     182
         LA    R7,VLSER           TEXTVLSER MODEL                        183
         BAL   R14,MOVEPARM       BUILD TEXTVLSER                        184
NOVOL    DS    0H                                                        185
*        *---------------------------------------*                       186
*        *     CYL OR TRK                        *                       187
*        *---------------------------------------*                       188
         LA    R9,DYATYPE         A(INPUT PARM)                          189
         LA    R1,CTRKTB          A(TABLE OF VALID PARMS)                190
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            191
         LTR   R15,R15            IS L'OUTPUT PARM = 0                   192
         BNZ   SETATYPE           NO; PARM IS IN TABLE                   193
         L     R15,ETYPE          REASON CODE                            194
         B     EXIT10             PEROCOLATE REASON CODE                 195
SETATYPE DS    0F                                                        196
         XR    R9,R9                                                     197
         LA    R7,CYL             TEXTUNIT MODEL                         198
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         199
*                                 MOVE CYL OR TRK FROM PARMLIST          200
         CLC   DYATYPE(L'DYATYPE),TRACKS IS THIS TRACK ALLOCATION?       201
         BNE   NOTRK              NO; LEAVE CYLINDER DEFAULT             202
         L     R15,0(R4)          A(TEXT UNIT IN USER STORAGE)           203
         MVC   0(2,R15),=AL2(DALTRK) INDICATE TRACK ALLOCATION           204
NOTRK    DS    0H                                                        205
*        *---------------------------------------*                       206
*        *     PRIMARY ALLOCATION                *                       207
*        *---------------------------------------*                       208
         XR    R9,R9                                                     209
         ICM   R9,B'0111',DYPRIM+1                                       210
         BNZ   PALOK              ¬=0; USE VALUE                         211
         L     R15,EPRIME         REASON CODE                            212
         B     EXIT10             PEROCOLATE REASON CODE                 213
PALOK    DS    0H                                                        214
         LA    R9,DYPRIM+1        ADDRESS OF FIELD IN INPUT PARMLIST     215
         LA    R7,PRIME           TEXTUNIT MODEL                         216
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         217
*        *---------------------------------------*                       218
*        *     SECONDARY ALLOCATION              *                       219
*        *---------------------------------------*                       220
         XR    R9,R9                                                     221
         ICM   R9,B'0111',DYSEC+1                                        222
         BZ    NOSECND            ¬=0; USE VALUE                         223
         LA    R9,DYSEC+1         ADDRESS OF FIELD IN INPUT PARMLIST     224
         LA    R7,SECND           TEXTUNIT MODEL                         225
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         226
NOSECND  DS    0H                                                        227
*        *---------------------------------------*                       228
*        *     DSORG                             *                       229
*        *---------------------------------------*                       230
         LA    R9,DYDSORG         A(INPUT PARM)                          231
         LA    R1,DSORGTB         A(TABLE OF VALID PARMS)                232
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            233
         LTR   R15,R15            IS L'OUTPUT PARM = 0                   234
         BNZ   SETDSORG           NO; PARM IS IN TABLE                   235
*                                 SET DEFAULT TO PS                      236
         MVC   DYDSORG(L'DYDSORG),DSORGPS                                237
SETDSORG DS    0H                                                        238
         LA    R7,DSORG           TEXTUNIT MODEL                         239
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         240
*        *---------------------------------------*                       241
*        *     DIRECTORY BLOCKS IF DSORG=PO      *                       242
*        *---------------------------------------*                       243
         CLC   DYDSORG(L'DYDSORG),DSORGPO  DSORG = PO?                   244
         BNE   NOTPO              NO; DO NOT SET DIRECTORY BLOCKS        245
         XR    R9,R9                                                     246
         ICM   R9,B'0111',DYDIR+1                                        247
         BNZ   PDIROK                                                    248
         L     R15,EDIR           REASON CODE                            249
         B     EXIT10             PEROCOLATE REASON CODE                 250
PDIROK   DS    0H                                                        251
         LA    R9,DYDIR+1         ADDRESS OF FIELD IN INPUT PARMLIST     252
         LA    R7,DIR             TEXTUNIT MODEL                         253
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         254
NOTPO    DS    0H                                                        255
*        *---------------------------------------*                       256
*        *     RECFM                             *                       257
*        *---------------------------------------*                       258
         LA    R9,DYRECFM         A(INPUT PARM)                          259
         LA    R1,RECFMTB         A(TABLE OF VALID PARMS)                260
         BAL   R14,FINDPARM       SEARCH TABLE OF VALID PARMS            261
         LTR   R15,R15            IS L'OUTPUT PARM = 0                   262
         BNZ   SETRECFM           NO; PARM IS IN TABLE                   263
         L     R15,ERECFM         REASON CODE                            264
         B     EXIT10             PEROCOLATE REASON CODE                 265
SETRECFM DS    0H                                                        266
         LA    R7,RECFM           TEXTUNIT MODEL                         267
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         268
*        *---------------------------------------*                       269
*        *     BLKSIZE                           *                       270
*        *---------------------------------------*                       271
         XR    R9,R9                                                     272
         ICM   R9,B'0011',DYBLKSIZ                                       273
         BZ    NOBLKSZ                                                   274
         LA    R9,DYBLKSIZ        ADDRESS OF FIELD IN INPUT PARMLIST     275
         LA    R7,BLKSZ           TEXTUNIT MODEL                         276
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         277
NOBLKSZ  DS    0H                                                        278
*        *---------------------------------------*                       279
*        *     LRECL                             *                       280
*        *---------------------------------------*                       281
         XR    R9,R9                                                     282
         ICM   R9,B'0011',DYLRECL                                        283
         BNZ   PLRECLOK                                                  284
         L     R15,ELRECL         REASON CODE                            285
         B     EXIT10             PEROCOLATE REASON CODE                 286
PLRECLOK DS    0H                                                        287
         LA    R9,DYLRECL         ADDRESS OF FIELD IN INPUT PARMLIST     288
         LA    R7,LRECL           TEXTUNIT MODEL                         289
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         290
         B     ENDUNITS                                                  291
NOTALLOC DS    0H                                                        292
*---------------------------------------------------------------------*  293
*        TEXT UNITS FOR DEALLOCATE FUNCTION                           *  294
*---------------------------------------------------------------------*  295
*        *---------------------------------------*                       296
*        *     DDNAME                            *                       297
*        *---------------------------------------*                       298
         LA    R9,DYDDNAME        ADDRESS OF FIELD IN INPUT PARMLIST     299
         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  300
         BE    SETDNAMU           YES; SET UNIT DEFAULT                  301
         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  302
         BE    SETDNAMU           YES; SET UNIT DEFAULT                  303
         LA    R9,DYDDNAME        ADDRESS OF FIELD IN INPUT PARMLIST     304
         LA    R7,DDNAMU          TEXTUNIT MODEL                         305
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         306
SETDNAMU DS    0H                                                        307
*        *---------------------------------------*                       308
*        *     DSNAME                            *                       309
*        *---------------------------------------*                       310
         LA    R9,DYDSN           ADDRESS OF FIELD IN INPUT PARMLIST     311
         CLI   0(R9),X'00'        IS FIRST BYTE X'00' ?                  312
         BE    SETDSNU            YES; SET UNIT DEFAULT                  313
         CLI   0(R9),X'40'        IS FIRST BYTE X'40' ?                  314
         BE    SETDSNU            YES; SET UNIT DEFAULT                  315
         LA    R9,DYDSN           ADDRESS OF FIELD IN INPUT PARMLIST     316
         LA    R7,DSNAMU          TEXTUNIT MODEL                         317
         BAL   R14,MOVEPARM       BUILD TEXTUNIT                         318
SETDSNU  DS    0H                                                        319
*        *---------------------------------------*                       320
*        *     END OF TEXT UNITS                 *                       321
*        *---------------------------------------*                       322
ENDUNITS DS    0H                                                        323
         OI    S99TUPTR,S99TUPLN  SET FLAG IN LAST POINTER LIST ENTRY    324
*---------------------------------------------------------------------*  325
*        DYNAMICALLY ALLOCATE DATASET                                 *  326
*---------------------------------------------------------------------*  327
         LA    R1,RBPT99          A(RB POINTER)                          328
         DYNALLOC                                                        329
         LTR   R15,R15            RC = 0 ?                               330
         BZ    EXIT00             YES ;EXIT                              331
         XR    R0,R0                                                     332
         ICM   R0,B'1100',S99ERROR    SET ERROR CODE                     333
         ICM   R0,B'0011',S99INFO     SET ERROR INFO CODE                334
         B     EXIT14                                                    335
*---------------------------------------------------------------------*   336
*        FINDPARM ROUTINE                                             *  337
* FUNCTION:                                                           *  338
*  SEARCHES TABLE OF VALID PARMS USER-SUPPLIED PARM.                  *  339
*  IF FOUND, RETURNS PARM FOR DYNALLOC TEXT UNIT.                     *  340
* INPUTS:                                                             *  341
*        R1 = A(TABLE OF VALID PARMS)                                 *  342
*        R9 = A(INPUT PARM)                                           *  343
* OUTPUTS:                                                            *  344
*        R9 = A(OUTPUT PARM)                                          *  345
*        R15 = L'(OUTPUT PARM) OR 0 IF NOT FOUND                      *  346
*---------------------------------------------------------------------*  347
FINDPARM DS    0H                                                        348
         STM   R4,R8,SAVE1        SAVE WORK REGISTERS                    349
         XR    R15,R15            DEFAULT LENGTH = 0                     350
         LM    R4,R7,0(R1)        LOAD TABLE REGS                        351
         LA    R1,16(R1)          POINT AT FIRST ENTRY                   352
FILOOP   DS    0H                                                        353
         EX    R4,FICLC           COMPARE INPUT PARM TO TABLE VALUE      354
         B     AFI                                                       355
FICLC    CLC   0(0,R1),0(R9)      *** EXECUTE ONLY ***                   356
AFI      DS    0H                                                        357
         BE    FIFOUND            EXIT IF FOUND                          358
         LA    R1,0(R6,R1)        POINT AT NEXT ENTRY                    359
         BCT   R7,FILOOP          CHECK NEXT PARM                        360
         B     FIEXIT                                                    361
FIFOUND  DS    0H                                                        362
         LR    R15,R5             OUTPUT PARM LENGTH                     363
         LA    R9,1(R4,R1)        OUTPUT PARM ADDRESS                    364
FIEXIT   DS    0H                                                        365
         LM    R4,R8,SAVE1        RESTORE WORK REGISTERS                 366
         BR    14                 RETURN                                 367
*---------------------------------------------------------------------*  368
*                                                                     *  369
*---------------------------------------------------------------------*  370
MOVEPARM DS    0H                                                        371
         LA    R4,4(R4)           BUMP TO NEXT SLOT IN POINTER LIST      372
         ST    R5,0(R4)           PUT A(TEXT UNIT) IN POINTER LIST       373
         ICM   R6,B'1111',0(R7) LENGTH FOR MOVE                          374
         EX    R6,MVIT            MOVE MODEL TO TEXTUNIT SLOT            375
         B     AFT1                                                      376
MVIT     MVC   0(0,R5),4(R7)      *** EXECUTE ONLY ***                   377
AFT1     DS    0H                                                        378
*        *---------------------------------------*                       379
*        *     LOOP THRU TEXTUNIT PARMS          *                       380
*        *---------------------------------------*                       381
         XR    R1,R1              CLEAR R1                               382
         LA    R5,4(R5)           POINT AT FIRST PARM IN TEXTUNIT        383
         ICM   R1,B'0011',6(R7) NUMBER OF PARMS                          384
         BZ    NOPARM                                                    385
PARMLOOP DS    0H                                                        386
         ICM   R6,B'0011',0(R5) LENGTH OF PARM IN TEXT UNIT              387
         BCTR  R6,0               LESS 1 FOR EXECUTE                     388
         EX    R6,MVIT1           MOVE PARMLIST FIELD TO TEXTUNIT        389
         B     AFT2                                                      390
MVIT1    MVC   2(0,R5),0(R9)      *** EXECUTE ONLY ***                   391
AFT2     DS    0H                                                        392
         LA    R5,3(R6,R5)        POINT TO NEXT SPACE FOR TEXT UNIT      393
         LA    R9,1(R6,R9)        POINT TO NEXT PARM IN INPUT            394
         BCT   R1,PARMLOOP                                               395
NOPARM   DS    0H                                                        396
         BR    R14                                                       397
*---------------------------------------------------------------------*  398
*        EXIT ROUTINES                                                *  399
*---------------------------------------------------------------------*  400
EXIT00   DS    0H                      DATASET ALLOCATED OR UNALLOCATED  401
         LA    15,X'00'                                                  402
         B     EXIT                                                      403
EXIT10   DS    0H                      ERROR IN PARMLIST                 404
         PERCRC RC=X'10'                                                 405
         B     EXIT                                                      406
EXIT14   DS    0H                      SVC 99 FAILED                     407
         PERCRC RC=X'14'                                                 408
         B     EXIT                                                      409
*---------------------------------------------------------------------*  410
*        COMMON EXIT                                                  *  411
*---------------------------------------------------------------------*  412
EXIT     DS   0H                                                         413
         STCM R15,B'0011',DYRETURN                                       414
         STCM R0,B'0011',DYREASON                                        415
         STCM R1,B'1111',DY99ERR                                         416
         ENDMOD                                                          417
*---------------------------------------------------------------------*  418
*        CONSTANTS                                                    *  419
*---------------------------------------------------------------------*  420
MAXUNITS EQU   50                 MAXIMUM TEXT UNITS                     421
AL       DC    CL(L'DYFUNCT)'AL'  ALLOCATION FUNCTION                    422
NEWDISP  DC    CL(L'DYDISP)'NEW'                                         423
SHRDISP  DC    CL(L'DYDISP)'SHR'                                         424
CATLG    DC    CL(L'DYNDISP)'CATLG'                                      425
KEEP     DC    CL(L'DYNDISP)'KEEP'                                       426
UDFLT    DC    CL(L'DYUNIT)'SYSDA'  DEFAULT FOR UNIT=                    427
DSORGPO  DC    CL(L'DYDSORG)'PO'                                         428
DSORGPS  DC    CL(L'DYDSORG)'PS'    DEFAULT FOR DSORG                    429
TRACKS   DC    CL(L'DYATYPE)'TRK' TRACK ALLOCATION                       430
EFUNCT   EQU   X'04'              PARMLIST ERROR: FUNCTION CODE          431
EDISP    EQU   X'08'              PARMLIST ERROR: DISP=(XXX              432
ETYPE    EQU   X'0C'              PARMLIST ERROR: SPACE=(XXX(            433
EPRIME   EQU   X'10'              PARMLIST ERROR: SPACE=(...(XXX,        434
EDIR     EQU   X'14'              PARMLIST ERROR: SPACE=(...(,,XXX       435
ERECFM   EQU   X'18'              PARMLIST ERROR: RECFM                  436
ELRECL   EQU   X'1C'              PARMLIST ERROR: LRECL                  437
*---------------------------------------------------------------------*  438
*        TABLES OF VALID PARMS                                        *  439
*---------------------------------------------------------------------*  440
*        *---------------------------------------*                       441
*        *     FUNCTIONS                         *                       442
*        *---------------------------------------*                       443
FUNCTB   DS    0F                                                        444
         DC    AL4(L'DYFUNCT-1)                   L'INPUT PARM -1        445
         DC    AL4(L'S99VERB)                     LENGTH OF OUTPUT PARM  446
         DC    AL4(L'DYFUNCT+L'S99VERB)           LENGTH OF AN ENTRY     447
*                                                 NUMBER OF ENTRIES      448
         DC    AL4(((EFUNCTB-FUNCTB)-16)/(L'DYFUNCT+L'S99VERB))          449
         DC    CL(L'DYFUNCT)'AL',AL(L'S99VERB)(S99VRBAL)                 450
         DC    CL(L'DYFUNCT)'UN',AL(L'S99VERB)(S99VRBUN)                 451
         DC    CL(L'DYFUNCT)'CC',AL(L'S99VERB)(S99VRBCC)                 452
         DC    CL(L'DYFUNCT)'DC',AL(L'S99VERB)(S99VRBDC)                 453
         DC    CL(L'DYFUNCT)'RI',AL(L'S99VERB)(S99VRBRI)                 454
         DC    CL(L'DYFUNCT)'DN',AL(L'S99VERB)(S99VRBDN)                 455
         DC    CL(L'DYFUNCT)'IN',AL(L'S99VERB)(S99VRBIN)                 456
EFUNCTB EQU    *                                                         457
*        *---------------------------------------*                       458
*        *     STATUS                            *                       459
*        *---------------------------------------*                       460
STATB    DS    0F                                                        461
         DC    AL4(L'DYDISP-1)                   L'INPUT PARM -1         462
         DC    AL4(L'PSTATS)                      LENGTH OF OUTPUT PARM  463
         DC    AL4(L'DYDISP+L'PSTATS)             LENGTH OF AN ENTRY     464
*                                                 NUMBER OF ENTRIES      465
         DC    AL4(((ESTATB-STATB)-16)/(L'DYDISP+L'PSTATS))              466
         DC    CL(L'DYDISP)'OLD',AL(L'PSTATS)(X'01')                     467
         DC    CL(L'DYDISP)'MOD',AL(L'PSTATS)(X'02')                     468
         DC    CL(L'DYDISP)'NEW',AL(L'PSTATS)(X'04')                     469
         DC    CL(L'DYDISP)'SHR',AL(L'PSTATS)(X'08')                     470
ESTATB   EQU    *                                                        471
*        *---------------------------------------*                       472
*        *     DISP                              *                       473
*        *---------------------------------------*                       474
DISPTB   DS    0F                                                        475
         DC    AL4(L'DYCDISP-1)                   L'INPUT PARM -1        476
         DC    AL4(L'PCDISP)                      LENGTH OF OUTPUT PARM  477
         DC    AL4(L'DYCDISP+L'PCDISP)            LENGTH OF AN ENTRY     478
*                                                 NUMBER OF ENTRIES      479
         DC    AL4(((EDISPTB-DISPTB)-16)/(L'DYCDISP+L'PCDISP))           480
         DC    CL(L'DYCDISP)'UNCATLG',AL(L'PCDISP)(X'01')                481
         DC    CL(L'DYCDISP)'CATLG',AL(L'PCDISP)(X'02')                  482
         DC    CL(L'DYCDISP)'DELETE',AL(L'PCDISP)(X'04')                 483
         DC    CL(L'DYCDISP)'KEEP',AL(L'PCDISP)(X'08')                   484
EDISPTB EQU     *                                                        485
*        *---------------------------------------*                       486
*        *     ALLOCATION UNIT                   *                       487
*        *---------------------------------------*                       488
CTRKTB   DS    0F                                                        489
         DC    AL4(L'DYATYPE-1)                   L'INPUT PARM -1        490
         DC    AL4(2)                             LENGTH OF OUTPUT PARM  491
         DC    AL4(L'DYATYPE+2)                   LENGTH OF AN ENTRY     492
*                                                 NUMBER OF ENTRIES      493
         DC    AL4(((ECTRKTB-CTRKTB)-16)/(L'DYATYPE+2))                  494
         DC    CL(L'DYATYPE)'TRK',AL(2)(X'0007')                         495
         DC    CL(L'DYATYPE)'CYL',AL(2)(X'0008')                         496
ECTRKTB EQU     *                                                        497
*        *---------------------------------------*                       498
*        *     DSORG                             *                       499
*        *---------------------------------------*                       500
DSORGTB  DS    0F                                                        501
         DC    AL4(L'DYDSORG-1)                   L'INPUT PARM -1        502
         DC    AL4(L'PDSORG)                     LENGTH OF OUTPUT PARM   503
         DC    AL4(L'DYDSORG+L'PDSORG)            LENGTH OF AN ENTRY     504
*                                                 NUMBER OF ENTRIES      505
         DC    AL4(((EDSORGTB-DSORGTB)-16)/(L'DYDSORG+L'PDSORG))         506
         DC    CL(L'DYDSORG)'PS',AL(L'PDSORG)(X'4000')                   507
         DC    CL(L'DYDSORG)'DA',AL(L'PDSORG)(X'2000')                   508
         DC    CL(L'DYDSORG)'PO',AL(L'PDSORG)(X'0200')                   509
EDSORGTB EQU    *                                                        510
*        *---------------------------------------*                       511
*        *     RECFM                             *                       512
*        *---------------------------------------*                       513
@F       EQU   X'80'              FIXED  LENGTH RECORDS                  514
@V       EQU   X'40'              VARIABLE LENGTH RECORDS                515
@U       EQU   X'C0'              VARIABLE LENGTH RECORDS                516
@B       EQU   X'10'              BLOCKED RECORDS                        517
@A       EQU   X'04'              RM=XXA (ASA CONTROL CHARACTERS)        518
@M       EQU   X'02'              RM=XXM (MACHINE CONTROL    CHARACTERS  519
RECFMTB  DS    0F                                                        520
         DC    AL4(L'DYRECFM-1)                   L'INPUT PARM -1        521
         DC    AL4(L'PRECFM)                     LENGTH OF OUTPUT PARM   522
         DC    AL4(L'DYRECFM+L'PRECFM)            LENGTH OF AN ENTRY     523
*                                                 NUMBER OF ENTRIES      524
         DC    AL4(((ERECFMTB-RECFMTB)-16)/(L'DYRECFM+L'PRECFM))         525
         DC    CL(L'DYRECFM)'F  ',AL(L'PRECFM)(@F)                       526
         DC    CL(L'DYRECFM)'FA ',AL(L'PRECFM)(@F+@A)                    527
         DC    CL(L'DYRECFM)'FM ',AL(L'PRECFM)(@F+@M)                    528
         DC    CL(L'DYRECFM)'FB ',AL(L'PRECFM)(@F+@B)                    529
         DC    CL(L'DYRECFM)'FBA',AL(L'PRECFM)(@F+@B+@A)                 530
         DC    CL(L'DYRECFM)'FBM',AL(L'PRECFM)(@F+@B+@M)                 531
         DC    CL(L'DYRECFM)'V  ',AL(L'PRECFM)(@V)                       532
         DC    CL(L'DYRECFM)'VA ',AL(L'PRECFM)(@V+@A)                    533
         DC    CL(L'DYRECFM)'VM ',AL(L'PRECFM)(@V+@M)                    534
         DC    CL(L'DYRECFM)'VB ',AL(L'PRECFM)(@V+@B)                    535
         DC    CL(L'DYRECFM)'VBA',AL(L'PRECFM)(@V+@B+@A)                 536
         DC    CL(L'DYRECFM)'VBM',AL(L'PRECFM)(@V+@B+@M)                 537
         DC    CL(L'DYRECFM)'U  ',AL(L'PRECFM)(@U)                       538
ERECFMTB EQU    *                                                        539
*---------------------------------------------------------------------*  540
*        TEXT UNIT MODELS FOR FUNCTION DSNAME ALLOCATION (AL)         *  541
*---------------------------------------------------------------------*  542
*        *---------------------------------------*                       543
*        *     UNIT                              *                       544
*        *---------------------------------------*                       545
UNIT     DC    AL4((PUNIT-UNIT)+L'PUNIT-5)                               546
         DC    AL2(DALUNIT)                                              547
         DC    AL2(1)                                                    548
LUNIT    DC    AL2(L'PUNIT)                                              549
PUNIT    DC    CL8' '             < === PRODDA AFTER TEST                550
*        *---------------------------------------*                       551
*        *     VOL=SER=                          *                       552
*        *---------------------------------------*                       553
VLSER    DC    AL4((PVLSER-VLSER)+L'PVLSER-5)                            554
         DC    AL2(DALVLSER)                                             555
         DC    AL2(1)                                                    556
LVLSER   DC    AL2(L'PVLSER)                                             557
PVLSER   DC    CL6' '             < === PRODDA AFTER TEST                558
*        *---------------------------------------*                       559
*        *     SPECIFICATION                     *                       560
*        *---------------------------------------*                       561
STATS    DC    AL4((PSTATS-STATS)+L'PSTATS-5)                            562
         DC    AL2(DALSTATS)                                             563
         DC    AL2(1)                                                    564
LSTATS   DC    AL2(L'PSTATS)                                             565
PSTATS   DC    X'04'              DISP=(NEW,)                            566
*        *---------------------------------------*                       567
*        *     NORMAL DISPOSITION                *                       568
*        *---------------------------------------*                       569
NDISP    DC    AL4((PNDISP-NDISP)+L'PNDISP-5)                            570
         DC    AL2(DALNDISP)                                             571
         DC    AL2(1)                                                    572
LNDISP   DC    AL2(L'PNDISP)                                             573
PNDISP   DC    X'02'              DISP=(,CATLG)                          574
*        *---------------------------------------*                       575
*        *     CONDITIONAL DISPOSITION           *                       576
*        *---------------------------------------*                       577
CDISP    DC    AL4((PCDISP-CDISP)+L'PCDISP-5)                            578
         DC    AL2(DALCDISP)                                             579
         DC    AL2(1)                                                    580
LCDISP   DC    AL2(L'PCDISP)                                             581
PCDISP   DC    X'04'              DISP=(,,DELETE)                        582
*        *---------------------------------------*                       583
*        *     DSORG                             *                       584
*        *---------------------------------------*                       585
DSORG    DC    AL4((PDSORG-DSORG)+L'PDSORG-5)                            586
         DC    AL2(DALDSORG)                                             587
         DC    AL2(1)                                                    588
LDSORG   DC    AL2(L'PDSORG)                                             589
PDSORG   DC    X'4000'            DSORG=PS                               590
*        *---------------------------------------*                       591
*        *     RECFM                             *                       592
*        *---------------------------------------*                       593
RECFM    DC    AL4((PRECFM-RECFM)+L'PRECFM-5)                            594
         DC    AL2(DALRECFM)                                             595
         DC    AL2(1)                                                    596
LRECFM   DC    AL2(L'PRECFM)                                             597
PRECFM   DC    AL1(X'10'+X'80')                  RECFM=FB                598
*        *---------------------------------------*                       599
*        *     LRECL                             *                       600
*        *---------------------------------------*                       601
LRECL    DC    AL4((PLRECL-LRECL)+L'PLRECL-5),AL2(DALLRECL)              602
         DC    AL2(1)                                                    603
LLRECL   DC    AL2(L'PLRECL)                                             604
PLRECL   DC    AL2(0)                                                    605
*        *---------------------------------------*                       606
*        *     BLOCKSIZE                         *                       607
*        *---------------------------------------*                       608
BLKSZ    DC    AL4((PBLKSZ-BLKSZ)+L'PBLKSZ-5),AL2(DALBLKSZ)              609
         DC    AL2(1)                                                    610
LBLKSZ   DC    AL2(L'PBLKSZ)                                             611
PBLKSZ   DC    AL2(0)                                                    612
*        *---------------------------------------*                       613
*        *     PRIMARY ALLOCATION                *                       614
*        *---------------------------------------*                       615
PRIME    DC    AL4((PPRIME-PRIME)+L'PPRIME-5),AL2(DALPRIME)              616
         DC    AL2(1)                                                    617
LPRIME   DC    AL2(L'PPRIME)                                             618
PPRIME   DC    AL3(0)                                                    619
*        *---------------------------------------*                       620
*        *     SECONDARY ALLOCATION              *                       621
*        *---------------------------------------*                       622
SECND    DC    AL4((PSECND-SECND)+L'PSECND-5),AL2(DALSECND)              623
         DC    AL2(1)                                                    624
LSECND   DC    AL2(L'PSECND)                                             625
PSECND   DC    AL3(0)                                                    626
*        *---------------------------------------*                       627
*        *     DIRECTORY BLOCK ALLOCATION        *                       628
*        *---------------------------------------*                       629
DIR      DC    AL4((PDIR-DIR)+L'PDIR-5),AL2(DALDIR)                      630
         DC    AL2(1)                                                    631
LDIR     DC    AL2(L'PDIR)                                               632
PDIR     DC    AL3(0)                                                    633
*        *---------------------------------------*                       634
*        *     ALLOCATION TYPE                   *                       635
*        *---------------------------------------*                       636
CYL      DC    AL4((ECYL-CYL)-5),AL2(DALCYL)                             637
         DC    AL2(0)                                                    638
ECYL     EQU   *                                                         639
*        *---------------------------------------*                       640
*        *     DDNAME                            *                       641
*        *---------------------------------------*                       642
DDNAM    DC    AL4((PDDNAM-DDNAM)+L'PDDNAM-5),AL2(DALDDNAM)              643
         DC    AL2(1)                                                    644
LDDNAM   DC    AL2(L'PDDNAM)                                             645
PDDNAM   DC    CL8' '                                                    646
*        *---------------------------------------*                       647
*        *     DATASET NAME                      *                       648
*        *---------------------------------------*                       649
DSNAM    DC    AL4((PDSNAM-DSNAM)+L'PDSNAM-5),AL2(DALDSNAM)              650
         DC    AL2(1)                                                    651
LDSNAM   DC    AL2(L'PDSNAM)                                             652
PDSNAM   DC    CL44' '                                                   653
*        *---------------------------------------*                       654
*---------------------------------------------------------------------*  655
*        TEXT UNIT MODELS FOR FUNCTION DSNAME UNALLOCATION (UN)       *  656
*---------------------------------------------------------------------*  657
*        *---------------------------------------*                       658
*        *     DDNAME                            *                       659
*        *---------------------------------------*                       660
DDNAMU   DC    AL4((PDDNAMU-DDNAMU)+L'PDDNAMU-5),AL2(DUNDDNAM)           661
         DC    AL2(1)                                                    662
LDDNAMU  DC    AL2(L'PDDNAMU)                                            663
PDDNAMU  DC    CL8' '                                                    664
*        *---------------------------------------*                       665
*        *     DATASET NAME                      *                       666
*        *---------------------------------------*                       667
DSNAMU   DC    AL4((PDSNAMU-DSNAMU)+L'PDSNAMU-5),AL2(DUNDSNAM)           668
         DC    AL2(1)                                                    669
LDSNAMU  DC    AL2(L'PDSNAMU)                                            670
PDSNAMU  DC    CL44' '                                                   671
*---------------------------------------------------------------------*  672
*        WORK AREA                                                    *  673
*---------------------------------------------------------------------*  674
WDYNAL   DSECT                                                           675
SAVE1    DS    5F                      SUBROUTINE WORK REGISTERS         676
S99RBLEN EQU   S99RBEND-S99RB          SVC 99 RB LENGTH                  677
RBPT99   DS    A                       SVC 99 RB POINTER                 678
RB99     DS    0F,CL(S99RBLEN)         SVC 99 RB                         679
TXPT99   DS    0F,CL((MAXUNITS)*4)     SVC 99 TEXT POINTERS              680
TXTUNITS DS    CL500                   TEXT UNITS                        681
LDYNAL   EQU   *-WDYNAL                                                  682
*---------------------------------------------------------------------*  683
*        OTHER DSECTS                                                 *  684
*---------------------------------------------------------------------*  685
         DYNPRM                   MAP INPUT PARMS                        686
         PRINT NOGEN                                                     687
         IEFZB4D0                                                        688
         IEFZB4D2                                                        689
         END                                                             690
