*+--------------------------------------------------------------------+    1
*|  FUNCTION:                                                         |    2
*|      ENCRYPTS AND DEENCRYPTS FILES WITH RECFM F, FB, V, VB OR U.   |    3
*|      THE INPUT PARAMETER IS USED AS A KEY TO ENCRYPT A FILE OR     |    4
*|      TO DEENCRYPT A FILE PREVIOUSLY ENCRYPTED WITH THAT KEY.       |    5
*|  INPUTS:                                                           |    6
*|      R1 - ADDRESS OF A PARMLIST. THE 1ST WORD IS THE ADDRESS OF    |    7
*|            A STRING WHOSE LENGTH IS IN THE FIRST HALFWORD.         |    8
*|            THIS IS EQUIVALENT TO  THE JCL // EXEC PARM= STRING     |    9
*|            OR THE PARAMETER SUPPLIED WITH FROM TSO "CALL"          |   10
*|      THE OTHER INPUT IS A FILE TO BE ENCRYPTED OR DEENCRYPTED      |   11
*|      ALLOCATED TO DDNAME "IN" (//IN  DD  DSN=...)                  |   12
*|  OUTPUTS:                                                          |   13
*|      THE INPUT FILE IS ENCRYPTED OR DEENCRYPTED.                   |   14
*|      RETURN CODE IN R15:                                           |   15
*|         0 - FILE HAS BEEN ENCRYPTED OR DEENCRYPTED                 |   16
*|         8 - ENCRYPTION/DEENCRYPTION KEY HAS NOT BEEN SUPPLIED      |   17
*|  LOGIC:                                                            |   18
*|      1) GETMAIN STORAGE FOR REENTRANT WORKAREA                     |   19
*|      2) GET THE ENCRYPTION KEY FROM INPUT PARAMETER                |   20
*|      3) SET UP INPUT/OUTPUT FILE FOR REENTRANT I/O                 |   21
*|      4) ENCRYPT EACH BYTE OF THE FILE BY XORING IT WITH RANDOM     |   22
*|         DIGIT AND UPDATING THE BYTE IN PLACE                       |   23
*|      5) FREEMAIN STORAGE FOR REENTRANT WORKAREA                    |   24
*|  ATTRIBUTES:                                                       |   25
*|      REENTERABLE, AMODE 24, RMODE  24                              |   26
*+--------------------------------------------------------------------+   27
*+--------------------------------------------------------------------+
*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |
*|                                                                    |
*|  Address questions to: mmarx@mdpaladin.com                         |
*|                                                                    |
*|  Permission is hereby granted, free of charge, to any person       |
*|  obtaining a copy of this software and associated documentation    |
*|  files (the "Software"), to deal in the Software without           |
*|  restriction, including without limitation the rights to use,      |
*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |
*|  copies of the Software, and to permit persons to whom the         |
*|  Software is furnished to do so, subject to the following          |
*|  conditions:                                                       |
*|                                                                    |
*|  The above copyright notice and this permission notice shall be    |
*|  included in all copies or substantial portions of the Software.   |
*|                                                                    |
*|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   |
*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |
*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |
*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |
*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |
*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |
*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |
*|  OTHER DEALINGS IN THE SOFTWARE.                                   |
*+--------------------------------------------------------------------+
         MODULE NCRYPT,BASE=12,AMODE=24,RMODE=24,FLOATSV=YES,          X  28
               TEXT='BIT-LEVEL FILE ENCRYPTER',LOC=BELOW                  29
*        *---------------------------------------*                        30
*        *     GET ENCRYPTION KEY FROM PARM=     *                        31
*        *---------------------------------------*                        32
         L     R1,0(R1)           A(PARM STRING) => R1                    33
         XR    R2,R2              CLEAR REGISTER R2                       34
         ICM   R2,B'0011',0(R1) LENGTH OF PARM                            35
         BZ    EXIT08             =0; PARM NOT GIVEN                      36
         CH    R2,=H'7'           IS ENCRYPTION KEY LE 7 BYTES?           37
         BNH   USEPRM             YES; DO NOT SET FOR DEFAULT             38
         LH    R2,=H'7'           SET TO TAKE ONLY FIRST 7 BYTES          39
USEPRM   DS    0H                                                         40
         BCTR  R2,0               LESS 1 FOR EXECUTE                      41
         EX    R2,MVIT1           MOVE NAME TO PLIST                      42
         B     MVIT1A                                                     43
MVIT1    MVC   KEYWORK+1(0),2(R1) MOVE KEY TO WORKAREA                    44
MVIT1A   DS    0H                                                         45
*        *---------------------------------------*                        46
*        *     MOVE DCB AND OPEN/CLOSE PARMLIST  *                        47
*        *     TO WORKAREA FOR REENTRANCY.       *                        48
*        *---------------------------------------*                        49
         MVC   IN(LINDCB),INDCB       MOVE DCB TO WORKAREA                50
         MVC   OLIST(LOLIST),OLIST1   MOVE OPEN/CLOSE PARMLIST TO WORK    51
*        *---------------------------------------*                        52
*        *     OPEN THE FILE FOR UPDATE          *                        53
*        *---------------------------------------*                        54
         LA    R9,IN              ADDRESS OF THE DCB                      55
         OPEN  ((R9),UPDAT),MF=(E,OLIST)                                  56
         USING IHADCB,R9          ADDRESSING FOR DCB MAPPING DSECT        57
*        *---------------------------------------*                        58
*        *     'XOR' EACH BYTE IN THE FILE       *                        59
*        *     WITH A RANDOM BYTE TO ENCRYPT     *                        60
*        *     OR DEENCRYPT.                     *                        61
*        *---------------------------------------*                        62
         B     M$READIT           INITIAL READ                            63
M$LOOP   DS    0H                                                         64
         BAS   R14,RANDOM         GENERATE 1 RANDOM HEX DIGIT             65
         LR    R2,R1              PUT IN LOW-ORDER BYTE OF R2             66
         BAS   R14,RANDOM         GENERATE 1 RANDOM HEX DIGIT             67
         SLL   R1,4               SHIFT HEX DIGIT LEFT 4 BITS             68
         OR    R2,R1              'OR' RANDOM DIGITS TO MAKE BYTE         69
         IC    R3,0(R4)           .. 'XOR' 1 BYTE FROM INPUT FILE         70
         XR    R3,R2              .. WITH RANDOM BYTE TO (DE)ENCRYPT      71
         STC   R3,0(R4)           STORE THE BYTE BACK IN FILE BUFFER      72
         LA    R4,1(R4)           POINT AT NEXT INPUT BYTE IN BUFFER      73
M$PUT0   DS    0H                                                         74
         C     R4,ENDREC          END OF INPUT RECORD?                    75
         BNE   M$GETI             NO; DO NOT GET INPUT                    76
         PUTX  IN                 PUT THE BACK INTO THE FILE              77
M$READIT DS    0H                                                         78
         GET   IN                 READ A RECORD                           79
         LR    R4,R1              R4 IS POINTER IN INPUT RECORD           80
         TM    DCBRECFM,DCBRECV   IS THE FILE RECFM=V OR RECFM=U ?        81
         BNO   M$VAR1             NO; PROCESS AS RECFM=F                  82
         TM    DCBRECFM,DCBRECU   IS THE FILE RECFM=V ?                   83
         BO    M$VAR1             NO; PROCESS THE FILE AS RECFM=F         84
         AH    R1,0(R1)           ADDRESS OF RECORD + LRECL FROM RDW      85
         LA    R4,4(R4)           BYPASS RDW                              86
         B     M$VAR2                                                     87
M$VAR1   DS    0H                                                         88
         AH    R1,DCBLRECL        ADDRESS OF RECORD + LRECL FOR RECFM=F   89
M$VAR2   DS    0H                                                         90
         ST    R1,ENDREC          ADDRESS OF END OF RECORD BUFFER + 1     91
M$GETI   DS    0H                                                         92
         B     M$LOOP             PROCESS NEXT BYTE IN INPUT FILE         93
*        *---------------------------------------*                        94
*        *     CLOSE THE FILE                    *                        95
*        *---------------------------------------*                        96
C$CLOSE  DS    0H                                                         97
         PUTX  IN                 UPDATE RECORD IN PLACE                  98
         CLOSE ,MF=(E,OLIST)                                              99
         B     EXIT00                                                    100
*---------------------------------------------------------------------*  101
*        RANDOM - GENERATE 1 RANDOM HEX DIGIT. ALSO GENERATE NEW      *  102
*                 FLOATING POINT NUMBER FOR NEXT ENCRYPTION KEY.      *  103
*                 INPUTS:                                             *  104
*                    NONE                                             *  105
*                 OUTPUTS:                                            *  106
*                    RANDOM LOW-ORDER 4 BITS IN R1.                   *  107
*                    NEW ENCRYPTION KEY IN FIELD 'KEYWORK'.           *  108
*---------------------------------------------------------------------*  109
RANDOM   DS    0H                                                        110
         BAKR  R14,0              CREATE STACK STATE ENTRY               111
*                                 .. MAKE ENCRYPTION KEY INTO            112
         MVI   KEYWORK,X'40'      .. NORMALIZED FLOATING POINT NUMBER    113
         LD    F0,KEYWORK         KEY TO FLOATING PT.REGS F0 AND F1      114
         AD    F0,PI              ADD PI                                 115
         LDR   F2,F0              COPY NUMBER INTO F2 AND F3             116
         MDR   F0,F2              ... CUBE                               117
         MDR   F0,F2              ... THE NUMBER                         118
         STD   F0,KEYWORK         PUT NUMBER BACK INTO KEY AREA          119
         LM    R0,R1,KEYWORK      LOAD INTO GENERAL REGS R6 AND R7       120
         SLDL  R0,16              SHIFT OUT SIGN AND HIGH ORDER BYTE     121
         SRDL  R0,8               SHIFT SEED NUMBER BACK                 122
         STM   R0,R1,KEYWORK      SAVE SEED FOR NEXT CALL TO ROUTINE     123
         SRL   R0,20              SHIFT OFF ALL BUT 4 BITS               124
         LR    R1,R0              LOAD INTO REGISTER 1                   125
         PR                       POP STACK AND RETRUN                   126
*---------------------------------------------------------------------*  127
*        EXIT ROUTINES                                                *  128
*---------------------------------------------------------------------*  129
EXIT00   DS    0H                      SUCCESSFUL                        130
         LA    R15,X'00'                                                 131
         B     EXIT                                                      132
EXIT08   DS    0H                      ENCRYPT KEY LENGTH = 0            133
         LA    R15,X'08'                                                 134
         B     EXIT                                                      135
*---------------------------------------------------------------------*  136
*        COMMON EXIT                                                  *  137
*---------------------------------------------------------------------*  138
EXIT     DS    0H                                                        139
         ENDMOD                                                          140
*---------------------------------------------------------------------*  141
*        CONSTANTS                                                    *  142
*---------------------------------------------------------------------*  143
PI       DC    D'3.14159'         PI                                     144
*---------------------------------------------------------------------*  145
*        OPEN LIST AND DCBS                                           *  146
*---------------------------------------------------------------------*  147
OLIST1   OPEN  (,),MF=L           PARMLIST FOR OPEN/CLOSE                148
LOLIST   EQU   *-OLIST1           LENGTH OF OPEN/CLOSE PARMLIST          149
INDCB    DCB   DDNAME=IN,                                              X 150
               DSORG=PS,                                               X 151
               MACRF=(GL,PL),     UPDATE FILES IN I/O BUFFER           X 152
               EODAD=C$CLOSE                                             153
LINDCB   EQU   *-INDCB            LENGTH OF THE DCB                      154
*---------------------------------------------------------------------*  155
*        WORK AREA                                                    *  156
*---------------------------------------------------------------------*  157
WNCRYPT  DSECT                                                           158
KEYWORK  DS    D                  ENCRYPTION KEY                         159
IN       DS    CL(LINDCB)         DCB IN REENTRANT STORAGE               160
OLIST    DS    0F,CL(LOLIST)      OPEN/CLOSE PARAMETER LIST              161
ENDREC   DS    F                  ADDRESS OF END OF RECORD + 1           162
LNCRYPT  EQU   *-WNCRYPT          LENGTH OF THE WORKAREA                 163
*---------------------------------------------------------------------*  164
*        OTHER DSECTS                                                 *  165
*---------------------------------------------------------------------*  166
         DCBD  DSORG=PS           MAPPING FOR THE DCB                    167
         END                                                             168
