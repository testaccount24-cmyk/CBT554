//*-------------------------------------------------------------------+
//*  ASMLKD.JCL                                                       |
//*                                                                   |
//*  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |
//*                                                                   |
//*  Address questions to: mmarx@mdpaladin.com                        |
//*                                                                   |
//*  Permission is hereby granted, free of charge, to any person      |
//*  obtaining a copy of this software and associated documentation   |
//*  files (the "Software"), to deal in the Software without          |
//*  restriction, including without limitation the rights to use,     |
//*  copy, modify, merge, publish, distribute, sublicense,and/or sell |
//*  copies of the Software, and to permit persons to whom the        |
//*  Software is furnished to do so, subject to the following         |
//*  conditions:                                                      |
//*                                                                   |
//*  The above copyright notice and this permission notice shall be   |
//*  included in all copies or substantial portions of the Software.  |
//*                                                                   |
//*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  |
//*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |
//*  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |
//*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |
//*  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |
//*  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |
//*  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |
//*  OTHER DEALINGS IN THE SOFTWARE.                                  |
//*-------------------------------------------------------------------+
//*-------------------------------------------------------------------*
//*  THIS JOB CONTAINS INSTREAM PROCEDURES AND STEPS TO ASSEMBLE      *
//*  AND LINK EDIT THE PROGRAMS IN "MVS POWER PROGRAMMING".           *
//*  BEFORE EXECUTING THIS JOB:                                       *
//*    1) ADD A JOB CARD.                                             *
//*    2) CHANGE EVERY LINE MARKED:  "<== " .                         *
//*  COPY ANY PROGRAM LINKED WITH PARM='AC=1' INTO AN APF-AUTHORIZED  *
//*  LIBRARY BEFORE EXECUTING IT.                                     *
//*-------------------------------------------------------------------*
//*        *------------------------------*
//*        *  ASSEMBLY PROCEDURE          *
//*        *------------------------------*
//ASSEM    PROC MEMBER=,
//         PARM1=,
//         UNIT=SYSDA,                <== CHANGE IF NECESSARY
//         MACLIB='MACLIB',           <== NAME OF MACRO  LIBRARY
//         SOURCE='ASM',              <== NAME OF SOURCE LIBRARY
//         OBJECT='OBJ'               <== NAME OF OBJECT LIBRARY
//ASSEM    EXEC PGM=IEV90,
//            PARM='NOOBJECT,DECK,XREF(SHORT),&PARM1'
//SYSLIB   DD DISP=SHR,DSN=&MACLIB
//         DD DISP=SHR,DSN=SYS1.AMODGEN
//         DD DISP=SHR,DSN=SYS1.MACLIB
//*        DD DISP=SHR,DSN=SYS1.MODGEN
//SYSUT1   DD UNIT=&UNIT,SPACE=(1700,(600,100))
//SYSUT2   DD UNIT=&UNIT,SPACE=(1700,(600,100))
//SYSUT3   DD UNIT=&UNIT,SPACE=(1700,(600,100))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DUMMY
//SYSIN    DD DISP=SHR,DSN=&SOURCE(&MEMBER)
//SYSPUNCH DD DISP=SHR,DSN=&OBJECT(&MEMBER)
//         PEND
//*        *------------------------------*
//*        *  LINK EDIT PROCEDURE         *
//*        *------------------------------*
//LKED     PROC PARM1=,
//         UNIT=SYSDA,                <== CHANGE IF NECESSARY
//         OBJECT='OBJ',              <== NAME OF OBJECT LIBRARY
//         LOAD='LOAD'                <== NAME OF LOAD   LIBRARY
//LKED     EXEC PGM=IEWL,
//            PARM='XREF,LET,LIST,NCAL,&PARM1'
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=&UNIT,SPACE=(1024,(50,20))
//OBJ      DD DSN=&OBJECT,DISP=SHR
//SYSLMOD  DD DSN=&LOAD,DISP=SHR
//SYSLIN   DD DDNAME=SYSIN
//         PEND
//*-------------------------------------------------------------------*
//*  EACH OF THE FOLLOWING STEPS ASSEMBLES AND LINK EDITS A PROGRAM   *
//*  CALLED BY OTHER PROGRAMS (APPENDIX B)                            *
//*-------------------------------------------------------------------*
//*
//*-------------------------------------------------------------------*
//*        GETASCB                                                    *
//*-------------------------------------------------------------------*
//GETASCB  EXEC ASSEM,MEMBER=GETASCB,PARM1='RENT'
//LGETASCB EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY GETASCB
           INCLUDE OBJ(GETASCB)
           NAME  GETASCB(R)
/*
//*-------------------------------------------------------------------*
//*        HEXPRT                                                     *
//*-------------------------------------------------------------------*
//HEXPRT   EXEC ASSEM,MEMBER=HEXPRT,PARM1='RENT'
//LHEXPRT  EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY HEXPRT
           INCLUDE OBJ(HEXPRT)
           NAME  HEXPRT(R)
/*
//*-------------------------------------------------------------------*
//*        PGMNAME                                                    *
//*-------------------------------------------------------------------*
//PGMNAME  EXEC ASSEM,MEMBER=PGMNAME,PARM1='RENT'
//LPGMNAME EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY PGMNAME
           INCLUDE OBJ(PGMNAME)
           NAME  PGMNAME(R)
/*
//*-------------------------------------------------------------------*
//*  EACH OF THE FOLLOWING STEPS ASSEMBLES AND LINK EDITS PROGRAMS    *
//*  RELATED TO ONE OF THE CHAPTERS IN "MVS POWER PROGRAMMING"        *
//*-------------------------------------------------------------------*
//*
//*-------------------------------------------------------------------*
//*        NCRYPT                                                     *
//*-------------------------------------------------------------------*
//NCRYPT   EXEC ASSEM,MEMBER=NCRYPT,PARM1='RENT'
//LNCRYPT  EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY NCRYPT
           INCLUDE OBJ(NCRYPT)
           NAME  NCRYPT(R)
/*
//*-------------------------------------------------------------------*
//*        EDEBUG                                                     *
//*-------------------------------------------------------------------*
//EDEBUG   EXEC ASSEM,MEMBER=EDEBUG,PARM1='RENT'
//LEDEBUG  EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY EDEBUG
           INCLUDE OBJ(EDEBUG,HEXPRT)
           NAME  EDEBUG(R)
/*
//*-------------------------------------------------------------------*
//*        SVCLIST                                                    *
//*-------------------------------------------------------------------*
//SVCLIST  EXEC ASSEM,MEMBER=SVCLIST,PARM1='RENT'
//LSVCLIST EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY SVCLIST
           INCLUDE OBJ(SVCLIST)
           NAME  SVCLIST(R)
/*
//*-------------------------------------------------------------------*
//*        ESAMOVE                                                    *
//*-------------------------------------------------------------------*
//ESAMOVE  EXEC ASSEM,MEMBER=ESAMOVE,PARM1='RENT'
//XTALK    EXEC ASSEM,MEMBER=XTALK,PARM1='RENT'
//PRTMOD   EXEC ASSEM,MEMBER=PRTMOD,PARM1='RENT'
//LESAMOVE EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY ESAMOVE
           INCLUDE OBJ(ESAMOVE,XTALK,GETASCB,PRTMOD)
           NAME  ESAMOVE(R)
/*
//*-------------------------------------------------------------------*
//*        XAMOVE                                                     *
//*-------------------------------------------------------------------*
//XAMOVE   EXEC ASSEM,MEMBER=XAMOVE,PARM1='RENT'
//LXAMOVE  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY XAMOVE
           INCLUDE OBJ(XAMOVE,GETASCB,PRTMOD)
           NAME  XAMOVE(R)
/*
//XASAC    EXEC ASSEM,MEMBER=XASAC,PARM1='RENT'
//LXASAC   EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY XASAC
           INCLUDE OBJ(XASAC)
           NAME  XASAC(R)
/*
//*-------------------------------------------------------------------*
//*        ANCHOR                                                     *
//*-------------------------------------------------------------------*
//ANCHOR   EXEC ASSEM,MEMBER=ANCHOR,PARM1='RENT'
//LANCHOR  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY ANCHOR
           INCLUDE OBJ(ANCHOR)
           NAME  ANCHOR(R)
/*
//*-------------------------------------------------------------------*
//*        SCHDSRB                                                    *
//*-------------------------------------------------------------------*
//TSCHD1   EXEC ASSEM,MEMBER=TSCHD1,PARM1='RENT'
//LTSCHD1  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY TSCHD1
           INCLUDE OBJ(TSCHD1,GETASCB)
           NAME  TSCHD1(R)
/*
//SCHDSRB  EXEC ASSEM,MEMBER=SCHDSRB,PARM1='RENT'
//LSCHDSRB EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY SCHDSRB
           INCLUDE OBJ(SCHDSRB,GETASCB)
           NAME  SCHDSRB(R)
/*
//NSWPRTN  EXEC ASSEM,MEMBER=NSWPRTN,PARM1='RENT'
//LNSWPRTN EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY NSWPRTN
           INCLUDE OBJ(NSWPRTN)
           NAME  NSWPRTN(R)
/*
//*-------------------------------------------------------------------*
//*        PCSET                                                      *
//*-------------------------------------------------------------------*
//PCSET    EXEC ASSEM,MEMBER=PCSET,PARM1='RENT'
//LPCSET   EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY PCSET
           INCLUDE OBJ(PCSET)
           NAME  PCSET(R)
/*
//PCPERM   EXEC ASSEM,MEMBER=PCPERM,PARM1='RENT'
//PCPERM   EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY PCPERM
           INCLUDE OBJ(PCPERM)
           NAME  PCPERM(R)
/*
//CKXTALK  EXEC ASSEM,MEMBER=CKXTALK,PARM1='RENT'
//LCKXTALK EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY CKXTALK
           INCLUDE OBJ(CKXTALK,XTALK,ANCHOR,GETASCB)
           NAME  CKXTALK(R)
/*
//*        *------------------------------*
//*        *  ESAMOVE: PC VERSION         *
//*        *------------------------------*
//ESAMVPC  EXEC ASSEM,MEMBER=ESAMVPC,PARM1='RENT'
//LESAMVPC EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY ESAMVPC
           INCLUDE OBJ(ESAMVPC,PRTMOD)
           NAME  ESAMVPC(R)
/*
//*-------------------------------------------------------------------*
//*        DSPACE                                                     *
//*-------------------------------------------------------------------*
//DSPACE   EXEC ASSEM,MEMBER=DSPACE,PARM1='RENT'
//LDSPACE  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY DSPACE
           INCLUDE OBJ(DSPACE,PGMNAME,ANCHOR)
           NAME  DSPACE(R)
/*
//DSPUT    EXEC ASSEM,MEMBER=DSPUT,PARM1='RENT'
//DSPFIND  EXEC ASSEM,MEMBER=DSPFIND,PARM1='RENT'
//LDSPUT   EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY DSPUT
           INCLUDE OBJ(DSPUT,DSPFIND)
           NAME  DSPUT(R)
/*
//*-------------------------------------------------------------------*
//*  EACH OF THE FOLLOWING STEPS ASSEMBLES AND LINK EDITS PROGRAMS    *
//*  IN APPENDIX C (ADDITIONAL PROGRAMS)                              *
//*-------------------------------------------------------------------*
//*
//*-------------------------------------------------------------------*
//*        REPMOD                                                     *
//*-------------------------------------------------------------------*
//REPMOD   EXEC ASSEM,MEMBER=REPMOD,PARM1='RENT'
//LREPMOD  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY REPMOD
           INCLUDE OBJ(REPMOD)
           NAME  REPMOD(R)
/*
//UNANCH   EXEC ASSEM,MEMBER=UNANCH,PARM1='RENT'
//LUNANCH  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY UNANCH
           INCLUDE OBJ(UNANCH)
           NAME  UNANCH(R)
/*
//*-------------------------------------------------------------------*
//*        HOOKDRV                                                    *
//*-------------------------------------------------------------------*
//HOOKDRV  EXEC ASSEM,MEMBER=HOOKDRV,PARM1='RENT'
//LHOOKDRV EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY HOOKDRV
           INCLUDE OBJ(HOOKDRV)
           NAME  HOOKDRV(R)
/*
//HOOKIN   EXEC ASSEM,MEMBER=HOOKIN,PARM1='RENT'
//LHOOKIN  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY HOOKIN
           INCLUDE OBJ(HOOKIN,REPMOD)
           NAME  HOOKIN(R)
/*
//HOOKSVC  EXEC ASSEM,MEMBER=HOOKSVC,PARM1='RENT'
//LHOOKSVC EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY HOOKSVC
           ORDER HOOKSVC,HOOKSV2
           INCLUDE OBJ(HOOKSVC)
           NAME  HOOKSVC(R)
/*
//*-------------------------------------------------------------------*
//*        BLDIRB                                                     *
//*-------------------------------------------------------------------*
//BLDIRB   EXEC ASSEM,MEMBER=BLDIRB,PARM1='RENT'
//LBLDIRB  EXEC LKED,PARM1='RENT,AC=1'
//LKED.SYSIN DD *
           ENTRY BLDIRB
           INCLUDE OBJ(BLDIRB)
           NAME  BLDIRB(R)
/*
//SUBTSK   EXEC ASSEM,MEMBER=SUBTSK,PARM1='RENT'
//LSUBTSK  EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY SUBTSK
           INCLUDE OBJ(SUBTSK)
           NAME  SUBTSK(R)
/*
//IRBRTN   EXEC ASSEM,MEMBER=IRBRTN,PARM1='RENT'
//LIRBRTN  EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY IRBRTN
           INCLUDE OBJ(IRBRTN)
           NAME  IRBRTN(R)
/*
//*-------------------------------------------------------------------*
//*        DYNAL                                                      *
//*-------------------------------------------------------------------*
//DYNAL    EXEC ASSEM,MEMBER=DYNAL,PARM1='RENT'
//LDYNAL   EXEC LKED,PARM1='RENT'
//LKED.SYSIN DD *
           ENTRY DYNAL
           INCLUDE OBJ(DYNAL)
           NAME  DYNAL(R)
