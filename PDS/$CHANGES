                     MVS Power Programming Diskette


Release and Maintenance Level
_____________________________

     Version 1.1E


Changes to Programs and Macros
______________________________

    ENDMOD Macro:                            (Fix#-R0001; 03/21/92)
     Problem:   In the  SPLEVEL=3 expansion  under MVS version 3.3 or
       higher, R13  in the ADDR= operand of the STORAGE RELEASE inner
       macro caused an assembly error.
     Solution: The STORAGE RELEASE,ADDR= operand now uses R1.

    CALLPC Macro:                            (Fix#-R0002; 03/21/92)
     Problem:   When invoked  in a program that resided above the 16M
       line (i.e.  AMODE 31,  RMODE ANY), the LAE instruction on line
       22 loaded  a virtual  address into  R14 and  cleared the  high
       order bit  in the  register.   When the  BAKR R14,0 on line 23
       built a PSW in the stack state entry, that PSW had bit 32 (the
       AMODE bit)  off.  The PR instruction on line 39 activated this
       24-bit PSW when it popped the stack.
     Solution: A  BSM instruction  has been included after line 22 to
       set the high order bit in R14 to the AMODE in the active PSW.

    DSPUT Program:                           (Fix#-R0003; 03/21/92)
     Problem:   The LAM  instructions on  lines 81  and 83 loaded the
       same ALET  into access registers 6 and 7.  This caused the MVC
       on line  86 to move the WTO parmlist within the same dataspace
       rather than between two dataspaces.
     Solution: Line  83 now  loads the  ALET for the second dataspace
       into access register 7.

    EDEBUG Program:                          (Fix#-R0004; 03/21/92)
     Problem:   The continuation  of the  SETRP on line 141 is not in
       column 16.   As  a result,  the macro  does  not  expand  with
       instructions to return to RTM2.
     Solution: The macro is continued in column 16.

    NSWPRTN Program:                         (Fix#-R0005; 03/21/92)
     Problem:   Under MVS  3.3 or higher this SRB routine abends with
       S55F when  SYSEVENT cannot  post its ECB.  This occurs because
       the ECB is in the workarea obtained by the STORAGE inner macro
       in the  MODULE macro.   Since  MODULE was executed while there
       was a key 0 PSW, the ECB resides in storage with a protect key
       of 0.   Note  that in  MVS releases  previous to  3.3 SYSEVENT
       TRANSWAP,ENTRY=BRANCH was  able  to  post  an  ECB  in  key  0
       storage.   IBM does  not document  the fact  that this changed
       with release 3.3.
     Solution: Another STORAGE OBTAIN macro acquires 4 bytes of key 8
       storage for  SYSEVENT's ECB.   The  STORAGE macro includes the
       KEY=8 operand to accomplish this.

   DSPACE Program:                          (Fix#-R0006; 04/23/92)
     Problem:  When the STORAGE OBTAIN macro on lines 272 through 275
       acquired SQA  storage for  the  DSPTBLE  blocks,  it  did  not
       initialize the storage to X'00'.  The routines that search the
       chain  of   DSPTBLE   blocks   expect   X'00000000'   in   the
       DSP_NEXT_ENTRY field in the last block in the chain.  When the
       routines did  not find  the end-of-chain,  they were unable to
       update the chain successfully during the creation and deletion
       of dataspaces.   This  caused unpredictable symptoms including
       S0C4 abends and infinite loops.
     Solution: An  XC instruction  after line 280 now initializes the
       storage to X'00000000'.

    INNERMM Macro:                           (Fix#-R0008; 10/01/92)
     Enhancement:    This  macro  now  expands  to  generate  an  LAE
       instruction rather  than an  LR or  LA.  This assures that the
       first operand's  access register  as well the general register
       is loaded when the invoker is in access register mode.


Uploading Programs To MVS Using FTTSO or IND$FILE
_________________________________________________

    1) On  the MVS  system: Allocate  a JCL library using ISPF 3.2 or
       IEFBR14.       The   library   should   have   the   following
       characteristics:
                    BLKSIZE=3120, LRECL=80, RECFM=FB,
                    DSORG=PO, SPACE=(TRK,(15,1,10))

    2) On  the PC:  Execute the file SENDJCL.BAT to transfer assembly
       and link-edit  JCL to  the library  allocated in  the previous
       step.   SENDJCL.BAT, as  well as  the other .BAT files on this
       diskette,  contains   IND$FILE  control  statements  for  file
       transfer.   If you are using FTTSO or some other file transfer
       utility, edit  these files  so that  they contain  the correct
       control statements.
       Specify the host library as the operand of SENDJCL.BAT:
                    SENDJCL host.jcl.library

    3) On  the MVS  system:   Edit the JOB in member ALLOC in the JCL
       library.   This JOB, which allocates a macro library, assembly
       source library, object library and load library, contains edit
       instructions.  Submit the JOB and check the return codes.

    4) On the PC:  Execute the file SENDMAC.BAT to transfer macros to
       the macro library allocated in the previous step.  Specify the
       macro library as the operand of SENDMAC.BAT:
                    SENDMAC host.macro.library

    5) On  the PC:  Execute the file SENDASM.BAT to transfer assembly
       source files  to the  source library  allocated in step 4.  If
       you do  not want  to transfer all the source files to the host
       system (the  transfer may  take some  time), add 'REM ' before
       each SEND statement that is to be ignored.  Specify the source
       library as the operand of SENDASM.BAT:
                    SENDASM host.source.library


Uploading Programs To MVS Using XCOM 6.2
________________________________________

    1) On  the MVS  system: Allocate  a JCL library using ISPF 3.2 or
       IEFBR14.       The   library   should   have   the   following
       characteristics:
                    BLKSIZE=3120, LRECL=80, RECFM=FB,
                    DSORG=PO, SPACE=(TRK,(15,1,10))

    2) On MVS: Execute XCOM6.2 with the following SYSIN01 file:
                    TYPE=RECEIVE
                    LU=xcom-on-pc
                    FILETYPE=FILE
                    FILEOPT=REPLACE
                    LFILE=host-jcl-library(SYSIN01B)
                    FILE=A:\SYSIN01B.XCM
                    NEWXFER
                    LFILE=host-jcl-library(SYSIN01C)
                    FILE=A:\SYSIN01C.XCM

    3) On  MVS: edit  the member  SYSIN01B which was transferred from
       the PC:

       . Change LU= to PC XCOM's LU.
       . Change all strings "@JCL@" to the host JCL library name.

       Execute XCOM6.2 on MVS using this SYSIN01 file to.

    4) On  the MVS  system:   Edit the JOB in member ALLOC in the JCL
       library.   This JOB, which allocates a macro library, assembly
       source library, object library and load library, contains edit
       instructions.  Submit the JOB and check the return codes.

    5) On MVS: edit the member SYSIN01C transferred from the PC:

       . Change LU= to PC XCOM's LU
       . Change  all strings  "@SOURCE@" to the host assembler source
         library name.
       . Change  all strings  "@MACLIB@" to  the host  macro  library
         name.

       Execute XCOM6.2 on MVS using this SYSIN01 file.


Assembling, Linking and Executing Programs
__________________________________________

    1) On  the MVS  system: Edit  the JOB in member ASMLKD in the JCL
       library.   This JOB, which contains steps to assemble and link
       each  program   in   the   source   library,   contains   edit
       instructions. Make  sure that any program that was link edited
       with    AC=1  resides  in  an  APF-authorized  library  before
       executing it.

    2) The  member EXEC  in the  JCL library  contains JCL  for  each
       program that  can be  executed as  a batch  job.    MVS  Power
                                                           __________
       Programming contains  execution instructions for programs that
       ___________
       execute as started tasks or under TSO.

+-------------------------------------------------------------------+
|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis |
|                                                                   |
|  Address questions to: mmarx@mdpaladin.com                        |
|                                                                   |
|  Permission is hereby granted, free of charge, to any person      |
|  obtaining a copy of this software and associated documentation   |
|  files (the "Software"), to deal in the Software without          |
|  restriction, including without limitation the rights to use,     |
|  copy, modify, merge, publish, distribute, sublicense,and/or sell |
|  copies of the Software, and to permit persons to whom the        |
|  Software is furnished to do so, subject to the following         |
|  conditions:                                                      |
|                                                                   |
|  The above copyright notice and this permission notice shall be   |
|  included in all copies or substantial portions of the Software.  |
|                                                                   |
|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  |
|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  |
|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND         |
|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT      |
|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,     |
|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     |
|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR    |
|  OTHER DEALINGS IN THE SOFTWARE.                                  |
+-------------------------------------------------------------------+
