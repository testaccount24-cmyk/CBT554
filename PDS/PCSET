*+--------------------------------------------------------------------+    1
*|  FUNCTION:                                                         |    2
*|    THIS STARTED TASK DEFINES MODULE CKXTALK AS A PC ROUTINE,       |    3
*|    GENERATES A PC NUMBER FOR THE ROUTINE,  AND SAVES THE PC        |    4
*|    NUMBER IN A USER CONTROL BLOCK ANCHORED OFF A CDE ON THE LPAQ.  |    5
*|  LOGIC:                                                            |    6
*|    1) LOCATE THE CONSOLE COMMUNICATIONS AREA OFF THE CURRENT TCB   |    7
*|       SO THAT THIS PROGRAM CAN PROCESS CONSOLE COMMANDS.           |    8
*|    2) CALL THE ANCHOR SERVICE TO BUILD A TABLE OF PC NUMBERS       |    9
*|       ANCHORED OFF A CDE IN THE LPAQ.  IF THE TABLE ALREADY        |   10
*|       EXISTS, IT IS LOCATED AND REUSED.                            |   11
*|    3) MAKE ADDRESS SPACE NON-SWAPPABLE.                            |   12
*|    4) GET A SYSTEM LX OR, REUSE AN ALREADY OBTAINED SYSTEM LX.     |   13
*|    5) LOAD CKXTALK MODULE.                                         |   14
*|    6) LOAD THE ADDRESS SPACE PERMISSIONS TABLE USED BY CKXTALK.    |   15
*|    7) MODIFY THE ENTRY TABLE ENTRY DEFINITION SO THAT CKXTALK      |   16
*|       IS THE ENTRY POINT ADDRESS AND THE PERMISSIONS TABLE         |   17
*|       ADDRESS IS THE FIRST LATENT PARAMETER.                       |   18
*|    8) CREATE THE ENTRY TABLE.                                      |   19
*|    9) GENERATE A PC NUMBER FROM A COMBINATION OF THE LINKAGE       |   20
*|       INDEX AND ENTRY TABLE ENTRY'S DISPLACEMENT INTO ENTRY TABLE. |   21
*|   10) GET A MASTER AX ("1") SO THAT THE PC ROUTINE HAS SSAR        |   22
*|       AUTHORITY (PC ROUTINE IS DEFINED WITH SASN=OLD).             |   23
*|   11) CONNECT THE ENTRY TABLE TO THE LINKAGE INDEX.                |   24
*|   12) GO INTO A WAIT STATE UNTIL POSTED BY A CONSOLE COMMAND.      |   25
*|       PROCESS ANY "STOP" OR "MODIFY" CONSOLE COMMANDS WHEN POSTED. |   26
*|  INPUTS:                                                           |   27
*|    NONE                                                            |   28
*|  OUTPUTS:                                                          |   29
*|    R15 - RETURN CODE                                               |   30
*|           0 - SUCCESSFUL PC ROUTINE DEFINITION                     |   31
*|          16 - UNSUCCESSFUL                                         |   32
*|               CHECK THE JOB LOG FOR MESSAGE OF LAST OPERATION      |   33
*|               R0 - RETURN CODE OF FAILING OPERATION                |   34
*|               R1 - REASON CODE OF FAILING OPERATION                |   35
*|  ATTRIBUTES:                                                       |   36
*|    AMODE 31, RMODE ANY, APF AUTHORIZED, REENTERABLE                |   37
*+--------------------------------------------------------------------+   38
*+--------------------------------------------------------------------+
*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |
*|                                                                    |
*|  Address questions to: mmarx@mdpaladin.com                         |
*|                                                                    |
*|  Permission is hereby granted, free of charge, to any person       |
*|  obtaining a copy of this software and associated documentation    |
*|  files (the "Software"), to deal in the Software without           |
*|  restriction, including without limitation the rights to use,      |
*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |
*|  copies of the Software, and to permit persons to whom the         |
*|  Software is furnished to do so, subject to the following          |
*|  conditions:                                                       |
*|                                                                    |
*|  The above copyright notice and this permission notice shall be    |
*|  included in all copies or substantial portions of the Software.   |
*|                                                                    |
*|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   |
*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |
*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |
*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |
*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |
*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |
*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |
*|  OTHER DEALINGS IN THE SOFTWARE.                                   |
*+--------------------------------------------------------------------+
         MODULE PCSET,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,            X  39
               TEXT='ESTABLISH A PC ROUTINE'                              40
*---------------------------------------------------------------------*   41
*        SET UP COMMAND PROCESSING                                    *   42
*---------------------------------------------------------------------*   43
         LA    R1,EXTLIST              PARMLIST FOR EXTRACT               44
         LA    R3,XTRANSW              ANSWER AREA FOR QEDIT              45
*                                      GET ADDRESS COMMUNICATION AREA     46
         EXTRACT (R3),'S',FIELDS=(COMM),MF=(E,(1))                        47
         L     R3,XTRANSW              A(COMMUNICATIONS AREA) => R3       48
         USING COMLIST,R3              MAP COMMUNICATIONS AREA            49
         QEDIT ORIGIN=COMCIBPT,CIBCTR=4 SET LIMIT ON QUEUED COMMANDS      50
         L     R4,COMCIBPT             A(COMMAND INPUT BUFFER)            51
         USING CIB,R4                  MAP CIB                            52
*---------------------------------------------------------------------*   53
*        CALL ANCHOR SERVICE TO OBTAIN STORAGE FOR THE USER           *   54
*        CONTROL BLOCK AND ANCHOR IT OFF A CDE ON THE LPAQ.           *   55
*---------------------------------------------------------------------*   56
         LA    R5,ANKLIST              A(PARMLIST) => R5                  57
         USING ANKPRM,R5               MAP PARMLIST                       58
         MVC   ANKEYE(L'ANKEYE),EYE    TABLE EYECATCHER TO PARMLIST       59
         MVC   ANKNAME(L'ANKNAME),TBLN TABLE NAME TO PARMLIST             60
         LA    R6,LPCSERV              ..TABLE LENGTH                     61
         ST    R6,ANKLEN               ..TO PARMLIST                      62
         XC    ANKEP(L'ANKEP),ANKEP    INITIALIZE ENTRYPOINT TO X'00'     63
         LOAD  EP=ANCHOR,ERRET=EXIT10  LOAD ANCHOR SERVICE ROUTINE        64
         LR    R2,R0                   ENTRYPOINT TO R15                  65
         WTO   'PCSET: ANCHOR ROUTINE LOADED'                             66
         LR    R15,R2                  ENTRYPOINT TO R15                  67
         LR    R1,R5                   ADDRESS OF PARMLIST => R1          68
         BASSM R14,R15                 INVOKE SERVICE                     69
         C     R15,=F'8'               DID ANCHOR SERVICE FAIL ?          70
         BH    EXIT10                  YES; EXIT PERCOLATING RC           71
         WTO   'PCSET: PC NUMBERS TABLE ANCHOR INITIALIZED'               72
         L     R5,ANKEP                TABLE ENTRYPOINT => R5             73
         USING PCSERV,R5               MAP PC SERVICE TABLE BLOCK         74
*        *---------------------------------------*                        75
*        *     MAKE THIS ADDRESS SPACE NON-SWAP  *                        76
*        *---------------------------------------*                        77
         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW         78
         LA    R1,TRANSECB             ..MAKE THIS                        79
         SYSEVENT TRANSWAP             ..ADDRESS SPACE NON-SWAPABLE       80
*---------------------------------------------------------------------*   81
*        DEFINE PC ROUTINE. GENERATE PC NUMBER.                       *   82
*---------------------------------------------------------------------*   83
*        *---------------------------------------*                        84
*        *     GET A SYSTEM LINKAGE INDEX        *                        85
*        *---------------------------------------*                        86
         ICM   R2,B'1111',LXVALUE      HAS LINKAGE INDEX BEEN GOTTEN      87
         BNZ   INDEXIS                 YES; DO NOT GET LX                 88
         LA    R2,1                    NUMBER OF LINKAGE INDEXES          89
         ST    R2,LXCOUNT              SAVE IN PC SERVICE BLOCK           90
         LXRES LXLIST=LXL,SYSTEM=YES,MF=(E,LXLIST)                        91
         LTR   R15,R15                 RC = 0 ;                           92
         BNZ   EXIT10                  NO; EXIT                           93
         WTO   'PCSET: SYSTEM LINKAGE INDEX OBTAINED'                     94
INDEXIS  DS    0H                                                         95
*        *---------------------------------------*                        96
*        *     LOAD CKXTALK MODULE.              *                        97
*        *---------------------------------------*                        98
         LOAD  EP=CKXTALK,ERRET=EXIT10 LOAD CKXTALK ROUTINE               99
         LR    R2,R0                   ADDRESS OF MODULE => R2           100
         WTO   'PCSET: CKXTALK LOADED'                                   101
*        *---------------------------------------*                       102
*        *     LOAD TABLE USED BY CXTALK MODULE  *                       103
*        *---------------------------------------*                       104
         LOAD  EP=PCPERM,ERRET=EXIT10  LOAD PERMISSIONS TABLE            105
         LR    R7,R0                   ADDRESS OF MODULE => R7           106
         WTO   'PCSET: PERMISSIONS TABLE LOADED'                         107
*        *---------------------------------------*                       108
*        *     BUILD HEADER ENTRY                *                       109
*        *---------------------------------------*                       110
         MVC   ETDESC(LENTABL),MENTBL  MOVE ENTRY TABLE TO WORK AREA     111
         LA    R8,ETESNUM              NUMBER OF PC ROUTINES             112
         ETDEF TYPE=SET,HEADER=ETDESC, ADDRESS OF THE HEADER ENTRY     X 113
               NUMETE=(R8)             NUMBER OF PC ROUTINES             114
*        *---------------------------------------*                       115
*        *     MODIFY THE ENTRY TABLE ENTRY      *                       116
*        *---------------------------------------*                       117
         ETDEF TYPE=SET,ETEADR=ETD1,   MODIFY ETE IN WORK AREA         X 118
               ROUTINE=(2),            ADDRESS OF THE PC ROUTINE       X 119
               PARM1=(7),              A(PERMIT TABLE) IS 1ST LAT PARM X 120
               PC=STACKING,            STACKING PC ROUTINE             X 121
               SSWITCH=YES,            BRANCH TO ANOTHER ADDRESS SPACE X 122
               ASCMODE=PRIMARY,        RECEIVE CONTROL IN PRIMARY MODE X 123
               SASN=OLD,               OLD PRIMARY IS NEW SECONDARY    X 124
               AKM=(0:15),             CALLER CAN BE IN ANY PSW KEY    X 125
               RAMODE=31,              ENTER IN 31 BIT MODE            X 126
               STATE=PROBLEM,EK=8,     ENTERED IN PROB STATE/TCB KEY   X 127
               EKM=(0:15),PKM=OR       AT ENTRY SET NEW PKM 0:15         128
*******  ADD ADDTIONAL "ETDEF TYPE=SET" FOR MORE PC ROUTINES HERE *****  129
*        *---------------------------------------*                       130
*        *     CREATE THE ENTRY TABLE.           *                       131
*        *---------------------------------------*                       132
         ETCRE ENTRIES=ETDESC          CREATE THE ENTRY TABLE            133
         ST    R0,ETETOKEN             SAVE ENTRY TABLE TOKEN            134
         LTR   R15,R15                 RC = 0 ;                          135
         BNZ   EXIT10                  NO; EXIT                          136
         WTO   'PCSET: ENTRY TABLE CREATED'                              137
*        *---------------------------------------*                       138
*        *     GENERATE PC NUMBER FROM LX AND ET.*                       139
*        *     SAVE PC # IN USER CONTROL BLOCK.  *                       140
*        *---------------------------------------*                       141
         LA    R7,ETESNUM              NUMBER OF DEFINED PC ROUTINES     142
         LA    R8,PCTAB                ADDRESS OF PC NUMBERS TABLE       143
         L     R2,LXVALUE              LINKAGE INDEX => R2               144
PCTBLP   DS    0H                                                        145
         ST    R2,0(R8)                PUT IN PCTABLE                    146
         LA    R2,1(R2)                INCREMENT LX + EX                 147
         LA    R8,4(R8)                POINT AT NEXT PCTAB ENTRY         148
         BCT   R7,PCTBLP               LOOP FOR NEXT PC NUMBER           149
*        *---------------------------------------*                       150
*        *     SINCE PC ROUTINE IS DEFINED       *                       151
*        *     SASN=OLD, WE NEED SSAR AUTHORITY  *                       152
*        *---------------------------------------*                       153
         LA    R2,1                     "1" IS MASTER AX                 154
         AXSET AX=(R2)                  SET AX TO 1                      155
*        *---------------------------------------*                       156
*        *     CONNECT ENTRY TABLE TO THE  LX    *                       157
*        *---------------------------------------*                       158
         LA    R2,1                    1 ENTRY TABLE TO BE CONNECTED     159
         ST    R2,ETECOUNT             PUT IN TOKEN PARMLIST             160
*                                      CONNECT THE ENTRY TABLE TO LX     161
         ETCON LXLIST=LXL,TKLIST=ETE,MF=(E,ETCONLST)                     162
         MODESET MODE=PROB             GET A PROBLEM STATE PSW           163
         B     WAIT                    WAIT FOR CONSOLE COMMANDS         164
*---------------------------------------------------------------------*  165
*        "STOP" AND "MODIFY" CONSOLE COMMANDS ARE PROCESSED IN LOOP   *  166
*---------------------------------------------------------------------*  167
CKCOM    DS    0H                      TOP OF COMMAND PROCESSING LOOP    168
         L     R4,COMCIBPT             ADDRESS OF COMMAND INPUT BUF      169
         CLI   CIBVERB,CIBSTOP         IS IT STOP ?                      170
         BNE   NOTSTOP                 NO; CHECK IF "MODIFY"             171
*        *---------------------------------------*                       172
*        *     DESTROY THE ENTRY TABLE.          *                       173
*        *---------------------------------------*                       174
         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW        175
         ETDES TOKEN=ETETOKEN,          ..DISCONNECT THE ENTRY TABLE   X 176
               PURGE=YES,MF=(E,ETDLIST) ..FROM ALL LNK TBLS AND DESTROY  177
         MODESET MODE=PROB             GET A PROBLEM STATE PSW           178
         WTO   'PCSET: ENTRY TABLE DESTROYED'                            179
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE CIB                 180
         B     EXIT00                                                    181
NOTSTOP  DS    0H                                                        182
         CLI   CIBVERB,CIBMODFY        IS IT MODIFY ?                    183
         BE    MODIFY                  YES; PROCESS "MODIFY" COMMAND     184
         WTO   'PCSET: INVALID COMMAND ISSUED'                           185
         B     WAIT                    WAIT FOR NEXT COMMAND             186
MODIFY   DS    0H                                                        187
*******  ADD   "MODIFY" COMMAND PROCESSING HERE                          188
*        *---------------------------------------*                       189
*        *     GO INTO WAIT STATE UNTIL POSTED   *                       190
*        *     BY A CONSOLE COMMAND.             *                       191
*        *---------------------------------------*                       192
WAIT     DS    0H                                                        193
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE LAST CIB            194
         L     R6,COMECBPT             .. WAIT ON ECB                    195
         WAIT  ECB=(6)                 .. IN COMM AREA                   196
         B     CKCOM                   BOTTOM OF COMMAND LOOP            197
*---------------------------------------------------------------------*  198
*        EXIT ROUTINES                                                *  199
*---------------------------------------------------------------------*  200
EXIT00   DS    0H                      SUCCESSFUL EXIT                   201
         LA    15,X'00'                                                  202
         B     EXIT                                                      203
EXIT10   DS    0H                      PERCOLATE RETRUN & REASON CODES   204
         PERCRC RC=X'10'                                                 205
         B     EXIT                                                      206
*---------------------------------------------------------------------*  207
*        COMMON EXIT                                                  *  208
*---------------------------------------------------------------------*  209
EXIT     DS   0H                                                         210
         LR   R2,R15                   PRESERVE REGISTER 15              211
         MODESET MODE=PROB             GET A PROBLEM STATE PSW           212
         LR   R15,R2                   RESTORE REGISTER 15               213
         ENDMOD                                                          214
*---------------------------------------------------------------------*  215
*        CONSTANTS                                                    *  216
*---------------------------------------------------------------------*  217
EYE      DC    CL4'PC@1'               EYCATCHER IN PC NUMBERS TABLE     218
TBLN     DC    CL8'PCTBL01'            NAME IN CDE ANCHOR FOR PC # TBL   219
*---------------------------------------------------------------------*  220
*        ENTRY TABLE DEFINITION                                       *  221
*---------------------------------------------------------------------*  222
MENTBL   ETDEF TYPE=INITIAL            BEGINNING OF ENTRY TABLE          223
METD1    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=(0:15)                           224
*******  IF ADDITIONAL ENTRIES ARE NEEDED IN ENTRY TABLE,ADD HERE *****  225
ETESNUM  EQU   (*-METD1)/ETDELEN      NUMBER OF PC ROUTINES DEFINED      226
         ETDEF TYPE=FINAL                                                227
LENTABL  EQU   *-MENTBL                                                  228
*---------------------------------------------------------------------*  229
*        WORK AREA                                                    *  230
*---------------------------------------------------------------------*  231
WPCSET DSECT                           WORK AREA                         232
TRANSECB DS    F                       ECB FOR SYSEVENT                  233
ECB1     DS    F                       ECB FOR THIS ADDRESS SPACE        234
ETDESC   DS    CL(LENTABL)             ENTRY TABLE ENTRIES               235
ETD1     EQU   ETDESC+(METD1-MENTBL)   ADDRESS OF ENTRY TABLE ENTRY      236
ANKLIST  DS    0F,CL(LANKPRM)          PARMLIST FOR ANCHOR1 SERVICE      237
LXLIST   LXRES MF=L                    PARMLIST FOR LXRES                238
ETCONLST ETCON MF=L                    PARMLIST FOR ETCON                239
ETDLIST  ETDES MF=L                    PARMLIST FOR ETDES                240
EXTLIST  EXTRACT ,MF=L                 PARMLIST FOR EXTRACT              241
XTRANSW  DS    F                       RESPONSE FROM QEDIT               242
LPCSET   EQU   *-WPCSET                LENGTH OF WORK AREA               243
*---------------------------------------------------------------------*  244
*        OTHER DSECTS                                                 *  245
*---------------------------------------------------------------------*  246
         ANKPRM                        MAP ANCHOR PARMLIST               247
         PCSERV                        MAP PC SERVICES ANCHOR BLOCK      248
         IEZCOM                        MAP COMMUNICATIONS AREA           249
CIB      DSECT                         MAP COMMAND INPUT BUFFER          250
         IEZCIB                                                          251
         IHAETD LIST=YES,FORMAT=1      MAP ENTRY TABLE ENTRY             252
         END                                                             253
