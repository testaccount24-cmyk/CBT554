*+--------------------------------------------------------------------+
*|                      MAINTENANCE LOG                               |
*+----------+-------------------------------------+---------+---------+
*|  DATE    |       DESCRIPTION                   | CHANGED | REFER   |
*+----------+-------------------------------------+---------+---------+
*| 04/23/92 |  CLEAR OBTAINED COMMON STORAGE      | MJM     | @01     |
*|          |    (FIX#-R0006)                     |         |         |
*+----------+-------------------------------------+---------+---------+
*
*+--------------------------------------------------------------------+    1
*| FUNCTION:                                                          |    2
*|   DSPACE EXECUTES AS A STARTED TASK.  IN RESPONSE TO CONSOLE       |    3
*|   COMMANDS, DSPACE WILL CREATE OR DELETE SCOPE=ALL DATASPACES.     |    4
*|   DSPACE INITIALIZES AND MAINTAINS A QUEUE OF CONTROL BLOCKS THAT  |    5
*|   DESCRIBE EACH DATASPACE IT HAS CREATED.  ANY PROGRAM THAT WISHES |    6
*|   TO ACCESS ANY OF THE DATASPACES (SUCH AS DSPUT) CAN LOCATE ITS   |    7
*|   CONTROL BLOCK AND USE ITS CONTENTS TO ESTABLISH ACCESS REGISTER  |    8
*|   MODE COMMUNICATION WITH THE DATASPACE.                           |    9
*| INPUTS:                                                            |   10
*|   COMMANDS FROM THE MVS CONSOLE:                                   |   11
*|     F DSPACE,CREATE(NNNNNNNN) - CREATES DATASPACE NNNNNNNN         |   12
*|     F DSPACE,DELETE(NNNNNNNN) - DELETES DATASPACE NNNNNNNN         |   13
*|     P DSPACE                  - STOPS DSPACE                       |   14
*| OUTPUTS:                                                           |   15
*|    R15 - RETURN CODE                                               |   16
*|          0 - DSPACE SUCCESSFULLY INITIALIZED                       |   17
*|          8 - INITIALIZATION FAILED                                 |   18
*|    CONSOLE MESSAGES DURING INITIALIZAION, SHUTDOWN, AND IN         |   19
*|    RESPONSE TO MODIFY COMMANDS.                                    |   20
*| MAINLINE LOGIC:                                                    |   21
*|    1) PREPARE TO ACCEPT COMMANDS FROM THE MVS CONSOLE.             |   22
*|    2) CALL INITRTN SUBROUTINE TO ANCHOR DATASPACE CONTROL BLOCK    |   23
*|       CHAIN ON AN LPAQ CDE.                                        |   24
*|    3) DEQUEUE THE "START" CIB AND WAIT FOR CONSOLE COMMANDS.       |   25
*|    4) WHEN A CONSOLE COMMAND POSTS THE COMMAREA ECB, GO TO THE     |   26
*|       TOP OF THE COMMAND PROCESSING LOOP AND DETERMINE WHETHER     |   27
*|       THE COMMAND IS "STOP" OR "MODIFY".                           |   28
*|       A) IF THE COMMAND IS "STOP", EXIT.                           |   29
*|       B) IF THE COMMAND IS "MODIFY" CALL THE PARSRTN SUBROUTINE    |   30
*|          PARSE THE COMMAND TEXT.                                   |   31
*|          1) IF THE COMMAND IS "CREATE",CALL THE CREATRN SUBROUTINE |   32
*|             TO CREATE A DATASPACE AND ITS CONTROL BLOCK.           |   33
*|          2) IF THE COMMAND IS "DELETE",CALL THE DELERTN SUBROUTINE |   34
*|             TO DELETE THE DATASPACE AND ITS CONTROL BLOCK.         |   35
*|    5) WAIT FOR THE NEXT CONSOLE COMMAND.                           |   36
*| ATTRIBUTES:                                                        |   37
*|    AMODE 31, RMODE ANY, REENTRANT, REQUIRES APF AUTHORIZATION      |   38
*+--------------------------------------------------------------------+   39
*+--------------------------------------------------------------------+
*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |
*|                                                                    |
*|  Address questions to: mmarx@mdpaladin.com                         |
*|                                                                    |
*|  Permission is hereby granted, free of charge, to any person       |
*|  obtaining a copy of this software and associated documentation    |
*|  files (the "Software"), to deal in the Software without           |
*|  restriction, including without limitation the rights to use,      |
*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |
*|  copies of the Software, and to permit persons to whom the         |
*|  Software is furnished to do so, subject to the following          |
*|  conditions:                                                       |
*|                                                                    |
*|  The above copyright notice and this permission notice shall be    |
*|  included in all copies or substantial portions of the Software.   |
*|                                                                    |
*|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   |
*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |
*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |
*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |
*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |
*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |
*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |
*|  OTHER DEALINGS IN THE SOFTWARE.                                   |
*+--------------------------------------------------------------------+
         MODULE DSPACE,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  40
               TEXT='SETUP DATA SPACES ADDRESS SPACE'                     41
*        *---------------------------------------*                        42
*        *     PREPARE MVS CONSOLE INTERFACE     *                        43
*        *---------------------------------------*                        44
*                                      ENQUEUE ON CONTROL BLOCK CHAIN     45
         ENQ   (QNAME,DSPTNAME,E,L'DSPTNAME,SYSTEM)                       46
         LA    R1,EXTLIST              PARMLIST FOR EXTRACT               47
         LA    R3,QEDANSW              ANSWER AREA FOR EXTRACT            48
*                                      GET ADDRESS COMMUNICATION AREA     49
         EXTRACT (R3),'S',FIELDS=(COMM),MF=(E,(1))                        50
         L     R3,QEDANSW              A(COMMUNICATIONS AREA) => R3       51
         USING COMLIST,R3              MAP COMMUNICATIONS AREA            52
         L     R4,COMCIBPT             A(COMMAND INPUT BUFFER)            53
         USING CIB,R4                  MAP CIB                            54
         QEDIT ORIGIN=COMCIBPT,CIBCTR=4 SET LIMIT ON QUEUED COMMANDS      55
         USING DSPTBLE,R5              MAP DSPTBLE BLOCK                  56
*        *---------------------------------------*                        57
*        *     CALL INITIALIZATION ROUTINE       *                        58
*        *---------------------------------------*                        59
         LA    R15,INITRTN             ..INVOKE                           60
         BAKR  0,R15                   ..INITIALIZATION ROUTINE           61
         LTR   R15,R15                 RC = 0 ?                           62
         BZ    CONT1                   YES; CONTINUE                      63
         WTO   'DSPACE: INITIALIZATION FAILED'                            64
         B     EXIT08                  NO; EXIT                           65
CONT1    DS    0H                                                         66
         LA    R1,TRANSECB             ..MAKE THIS                        67
         SYSEVENT TRANSWAP             ..ADDRESS SPACE NON-SWAPABLE       68
         B     WAIT                    WAIT FOR CONSOLE COMMANDS          69
*        *---------------------------------------*                        70
*        *     TOP OF COMMAND PROCESSING LOOP    *                        71
*        *---------------------------------------*                        72
CKCOM    DS    0H                      TOP OF COMMAND PROCESSING LOOP     73
         L     R4,COMCIBPT             ADDRESS OF COMMAND INPUT BUFR      74
         CLI   CIBVERB,CIBSTOP         IS THE COMMAND "STOP" ?            75
         BNE   NOTSTOP                 NO; CHECK IF "MODIFY"              76
*        *---------------------------------------*                        77
*        *     PROCESS "STOP" COMMAND            *                        78
*        *---------------------------------------*                        79
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE CIB                  80
         B     EXIT00                  EXIT WITH RC=0                     81
NOTSTOP  DS    0H                                                         82
         CLI   CIBVERB,CIBMODFY        IS THE COMMAND "MODIFY" ?          83
         BE    MODIFY                  YES; PROCESS "MODIFY" COMMAND      84
         WTO   'DSPACE: INVALID COMMAND ISSUED'                           85
         B     WAIT                    WAIT FOR NEXT COMMAND              86
MODIFY   DS    0H                                                         87
*        *---------------------------------------*                        88
*        *     PROCESS "MODIFY" COMMAND          *                        89
*        *---------------------------------------*                        90
         LA    R15,PARSRTN             ..INVOKE                           91
         BAKR  0,R15                   ..COMMAND PARSE ROUTINE            92
*                                      ENQUEUE ON CONTROL BLOCK CHAIN     93
         ENQ   (QNAME,DSPTNAME,E,L'DSPTNAME,SYSTEM)                       94
         CLC   PARSAREA(L'COMM1),COMM1 IS THE COMMAND "CREATE" ?          95
         BNE   NCOMM1                  NO; CHECK NEXT COMMAND             96
         LA    R15,CREATRN             ..INVOKE                           97
         BAKR  0,R15                   ..DATASPACE CREATE ROUTINE         98
         B     WAIT                    WAIT FOR NEXT COMMAND              99
NCOMM1   DS    0H                                                        100
         CLC   PARSAREA(L'COMM2),COMM2 IS THE COMMAND "DELETE" ?         101
         BNE   NCOMM2                  NO; CHECK NEXT COMMAND            102
         LA    R15,DELERTN             ..INVOKE                          103
         BAKR  0,R15                   ..DATASPACE DELETE ROUTINE        104
         B     WAIT                    WAIT FOR NEXT COMMAND             105
NCOMM2   DS    0H                                                        106
*        *---------------------------------------*                       107
*        *     UNKNOWN COMMAND                   *                       108
*        *---------------------------------------*                       109
         WTO   'DSPACE: UNKNOWN OPERAND'                                 110
         B     WAIT                    WAIT FOR NEXT COMMAND             111
WAIT     DS    0H                                                        112
*                                      DEQUEUE CONTROL BLOCK CHAIN       113
         DEQ   (QNAME,DSPTNAME,L'DSPTNAME,SYSTEM),RET=HAVE               114
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R4)   FREE THE PROCESSED CIB       115
         L     R6,COMECBPT             .. WAIT ON ECB                    116
         WAIT  ECB=(6)                 .. IN COMM AREA                   117
         B     CKCOM                   BOTTOM OF COMMAND LOOP            118
*---------------------------------------------------------------------*  119
*        INITIALIZATION ROUTINE                                       *  120
*          1)  CALL PGMNAME TO GET CURRENT ADDRESS SPACE NAME         *  121
*          2)  ISSUE ALESERV EXTRACTH TO GET STOKEN FOR CURRENT SPACE *  122
*          3)  CALL ANCHOR TO GET LPAQ CDE TO ANCHOR CONTROL BLOCKS   *  123
*          4)  INITIALIZE THE FIRST CONTROL BLOCK ON THE CHAIN        *  124
*---------------------------------------------------------------------*  125
INITRTN  DS    0H                                                        126
         LA    R1,PPGPARM              PARMLIST FOR PGMNAME SERVICE      127
         ICM   R15,B'1111',=V(PGMNAME) A(PGNMNAM SERVICE)                128
         BNZ   CONTI0                  ¬=0; MODULE IS LINK-EDITED        129
         LA    R15,8                   SET BAD RETURN CODE               130
         B     INITRTNE                EXIT THIS SUBROUTINE              131
CONTI0   DS    0H                                                        132
         O     R15,=A(X'80000000')     TURN ON HIGH ORDER BIT            133
         BASSM R14,R15                 INVOKE SERVICE                    134
*                                      SAVE HOME ADDRESS SPACE NAME      135
         MVC   HOMENAME(L'HOMENAME),PPGNAME-PPGNM(R1)                    136
         ALESERV EXTRACTH,             GET STOKEN FOR THIS ADDRESS SPC X 137
               STOKEN=HOMETOKN,        RETURN STOKEN TO HOMETOKN       X 138
               MF=(E,ALELIST)                                            139
         LTR   R15,R15                 RC = 0?                           140
         BZ    CONTI1                  YES; CONTINUE                     141
         WTO   'DSPACE: ALESERV EXTRACT FAILED'                          142
         B     INITRTNE                EXIT THIS SUBROUTINE              143
CONTI1   DS    0H                                                        144
         LA    R1,ANKPARMS             PARMLIST FOR ANCHOR SERVICE       145
         USING ANKPRM,R1               MAP PARMLIST                      146
         LA    R15,LDSPTABE            ..LENGTH OF DSPTBLE               147
         ST    R15,ANKLEN              ..TO PARMLIST                     148
         MVI   ANKSP,ANKPOOL           SET SUBPOOL IN PARMLIST           149
         MVC   ANKNAME(8),DSPTNAME     MODULE NAME TO PARMLIST           150
         MVC   ANKEYE(L'ANKEYE),EYEID  EYECATCHER TO PARMLIST            151
         XC    ANKEP(L'ANKEP),ANKEP    INITIALIZE ENTRYPOINT TO X'00'    152
         ICM   R15,B'1111',=V(ANCHOR)  A(ANCHOR SERVICE)                 153
         BNZ   CONTI2                                                    154
         WTO   'DSPACE: ANCHOR NOT LINKED'                               155
         LA    R15,8                   SET BAD RETURN CODE               156
         B     INITRTNE                EXIT THIS SUBROUTINE              157
CONTI2   DS    0H                                                        158
         O     R15,=A(X'80000000')     TURN ON HIGH ORDER BIT            159
         BASSM R14,R15                 INVOKE SERVICE                    160
         C     R15,=F'4'               RC LE 4?                          161
         BNH   CONTI3                  YES; CONTINUE                     162
         WTO   'DSPACE: ANCHOR FAILED'                                   163
         B     INITRTNE                EXIT THIS SUBROUTINE              164
CONTI3   DS    0H                                                        165
         LA    R5,ANKPARMS             PARMLIST FOR ANCHOR SERVICE       166
         L     R5,ANKEP-ANKPRM(R5)     LOAD ADDRESS OF FIRST TBLENTRY    167
         ST    R5,ENTRY1               SAVE A(FIRST ENTRY)               168
*                                      TABLE INITIALIZED ?               169
         CLC   DSP_XNAME(L'DSP_XNAME),=C'@@NULL@@'                       170
         BE    ALLSET                  YES; BYPASS INITIALIZATION        171
*                                      SET NEXT ENTRY FIELD TO X'00'     172
         XC    DSP_NEXT_ENTRY(L'DSP_NEXT_ENTRY),DSP_NEXT_ENTRY           173
*                                      SET NAME FIELD TO DUMMY           174
         MVC   DSP_XNAME(L'DSP_XNAME),=C'@@NULL@@'                       175
*                                      SET NAME FIELD TO DUMMY           176
         MVC   DSP_XOUTNAME(L'DSP_XOUTNAME),=C'@@NULL@@'                 177
ALLSET   DS    0H                                                        178
         WTO   'DSPACE: INITIALIZED '  ISSUE INITIALIZED MESSAGE         179
INITRTNE DS    0H                                                        180
         PR                            POP STACK AND RETURN              181
*---------------------------------------------------------------------*  182
*        COMMAND PARSE ROUTINE                                        *  183
*---------------------------------------------------------------------*  184
PARSRTN  DS    0H                                                        185
         MVI   OPERAND,X'40'                   ..SET OPERAND             186
         MVC   OPERAND+1(L'OPERAND-1),OPERAND  ..AREA TO SPACES          187
         MVI   PARSAREA,X'40'                     ..SET COMMAND PARSE    188
         MVC   PARSAREA+1(L'PARSAREA-1),PARSAREA  ..AREA TO SPACES       189
         LH    R6,CIBDATLN         LENGTH OF CIBDATA                     190
         BCTR  R6,0                LESS 1 FOR EXECUTE                    191
         EX    R6,MVCIBDAT         MOVE COMMAND TO PARSE AREA            192
         B     AFT1                                                      193
MVCIBDAT MVC   PARSAREA(0),CIBDATA *** EXECUTE ONLY ***                  194
AFT1     DS    0H                                                        195
         LA    R7,PARSAREA+7       POINT AT OPERAND                      196
         S     R6,=F'7'            DECREMENT LENGTH                      197
         BNH   PARSRTNE            LE 0; EXIT                            198
         EX    R6,TRTIBDAT         TEST FOR DELIMETER                    199
         B     AFT2                                                      200
TRTIBDAT TRT   0(0,R7),CMDDLM      *** EXECUTE ONLY ***                  201
AFT2     DS    0H                                                        202
         LR    R9,R1               A(DELIMETER)                          203
         SR    R9,R7               LENGTH OF OPERAND                     204
         BCTR  R9,0                DECREMENT FOR EXECUTE                 205
         EX    R9,MVCOBDAT         MOVE OPERAND                          206
         B     AFT3                                                      207
MVCOBDAT MVC   OPERAND(0),0(R7)    *** EXECUTE ONLY ***                  208
AFT3     DS    0H                                                        209
PARSRTNE DS    0H                                                        210
         PR                            POP STACK AND RETURN              211
*        *---------------------------------------*                       212
*        *      TABLE OF DELIMETERS USED         *                       213
*        *      TO PARSE COMMANDS                *                       214
*        *---------------------------------------*                       215
CMDDLM   DC    XL256'00'                                                 216
         ORG   CMDDLM+X'40'                                              217
         DC    X'40'                                                     218
         ORG   CMDDLM+C','                                               219
         DC    C','                                                      220
         ORG   CMDDLM+C'('                                               221
         DC    C'('                                                      222
         ORG   CMDDLM+C')'                                               223
         DC    C')'                                                      224
         ORG                                                             225
*---------------------------------------------------------------------*  226
*        DATASPACE CREATE ROUTINE                                     *  227
*          1)  ISSUE DSPSERV CREATE TO BUILD DATASPACE                *  228
*          2)  FIND END OF DSPTBLE CHAIN, BUILD DSPTBLE BLOCK FOR     *  229
*              NEW DATASPACE AND ADD THE BLOCK TO THE DSPTBLE CHAIN   *  230
*---------------------------------------------------------------------*  231
CREATRN  DS    0H                                                        232
         MODESET MODE=SUP,             ..GET A SUPERVISOR STATE        X 233
               KEY=ZERO                ..ZERO KEY PSW                    234
*                                                                        235
         DSPSERV CREATE,               CREATE A DATASPACE              X 236
               SCOPE=ALL,              ACCESS PERMITTED TO ALL         X 237
               NAME=OPERAND,           NAME OF DATASPACE FROM COMMAND  X 238
               BLOCKS=DSPBLOCK,        SIZE OF THE DATASPACE           X 239
               KEY=KEY,                DATASPACE STORAGE KEY           X 240
               STOKEN=DSPTOKEN,        STOKEN OF NEW DATASPACE         X 241
               ORIGIN=DSPORG,          FIRST VIRTUAL ADDR IN DATASPACE X 242
               MF=(E,DSPLIST,COMPLETE)                                   243
         LTR   R15,R15                 RETURN CODE = 0 ?                 244
         BZ    CONTC1                  YES; CONTINUE                     245
         WTO   'DSPACE: DPSERV CREATE FAILED'                            246
         B     CREATRNE                EXIT THIS ROUTINE                 247
CONTC1   DS    0H                                                        248
*        *---------------------------------------*                       249
*        *     BUILD DSPTBLE CONTROL BLOCK       *                       250
*        *     FOR DATASPACE AND CHAIN IT ON     *                       251
*        *---------------------------------------*                       252
         L     R5,ENTRY1               A(FIRST DSPTBLE CONTROL BLOCK)    253
CKNXTE   DS    0H                                                        254
*                                      WAS THIS CREATED BY ADDRESS       255
*                                      SPACE WITH THIS NAME              256
         CLC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),HOMENAME                 257
         BNE   CKNXT                   NO; CHECK THE NEXT ENTRY          258
*                                      DOES THIS HAVE SAME DSPACE NAME?  259
         CLC   DSP_XNAME(L'DSP_XNAME),OPERAND                            260
         BE    STUPENT                 YES; MUST NOT HAVE BEEN           261
*                                      CLEANED UP SO REUSE IT            262
CKNXT    DS    0H                                                        263
*                                      IS THIS THE LAST IN CHAIN ?       264
         ICM   R6,B'1111',DSP_NEXT_ENTRY                                 265
         BZ    NEWENT                  YES; GET A NEW DSPTBLE BLOCK      266
         LR    R5,R6                   POINT AT NEXT DSPTBLE BLOCK       267
         B     CKNXTE                  CHECK NEXT BLOCK                  268
NEWENT   DS    0H                                                        269
         ICM   R15,B'0001',=AL1(ANKPOOL)                                 270
         LA    R0,LDSPTBLE             LENGTH OF DSPTBLE BLOCK           271
         STORAGE OBTAIN,COND=YES,      GET STORAGE FOR NEW BLOCK       X 272
               LENGTH=(0),             LENGTH OF DSPTBLE BLOCK         X 273
               SP=(15),                SAME SUBPOOL AS CDE             X 274
               ADDR=(1)                RETURN STORAGE ADDRESS TO R1      275
         LTR   R15,R15                                                   276
         BZ    CONTC2                  YES; CONTINUE                     277
         WTO   'DSPACE: STORAGE OBTAIN FAILED FOR CREATE'                278
         B     CREATRNE                EXIT THIS ROUTINE                 279
CONTC2   DS    0H                                                        280
         XC    0(LDSPTBLE,R1),0(R1)    CLEAR THE COMMON STORAGE     @01  280001
         ST    R1,DSP_NEXT_ENTRY       PUT ADDRESS IN PREVIOUS BLOCK     281
         LR    R5,R1                   POINT AT THIS BLOCK               282
STUPENT  DS    0H                                                        283
*                                      PUT EYECATCHER IN BLOCK           284
         MVC   DSP_BLOCK_ID(L'DSP_BLOCK_ID),EYEID                        285
*                                      COPY DSPSERV PARMLIST TO BLOCK    286
         MVC   DSP(DSPL),DSPLIST                                         287
*                                      COPY CREATOR'S STOKEN TO BLOCK    288
         MVC   DSP_OWNER_STOKEN(L'DSP_OWNER_STOKEN),HOMETOKN             289
*                                      COPY CREATOR'S NAME  TO BLOCK     290
         MVC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),HOMENAME                 291
         MVC   WTOAREA(WTO1L),WTO1     COPY WTO PARMLIST TO USER STORAG  292
         MVC   WTO1VAR(L'WTO1VAR),OPERAND   MOVE DSPACE NAME TO WTO      293
         LA    R1,WTOAREA              ..ISSUE                           294
         WTO   ,MF=(E,(R1))            ..WTO                             295
CREATRNE DS    0H                                                        296
         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE AND KEY PSW   297
         PR                            POP STACK AND RETURN              298
*---------------------------------------------------------------------*  299
*        DATASPACE DELETE ROUTINE                                     *  300
*---------------------------------------------------------------------*  301
DELERTN  DS    0H                                                        302
*        *---------------------------------------*                       303
*        *     SEARCH CHAIN FOR DSPTBLE ENTRY    *                       304
*        *     FOR THE DATASPACE TO DELETE       *                       305
*        *---------------------------------------*                       306
         L     R5,ENTRY1               A(FIRST DSPTBLE BLOCK)            307
CKNXTE1 DS     0H                                                        308
*                                      A(NEXT DSPTBLE BLOCK)             309
         ICM   R6,B'1111',DSP_NEXT_ENTRY                                 310
*                                      WAS THIS DATASPACE CREATED BY     311
*                                      ADDRESS SPACE WITH THIS NAME      312
         CLC   DSP_OWNER_NAME(L'DSP_OWNER_NAME),HOMENAME                 313
         BNE   CKNXT1                  NO; CHECK THE NEXT ENTRY          314
*                                      DOES THIS HAVE SAME DSPACE NAME?  315
         CLC   DSP_XNAME(L'DSP_XNAME),OPERAND                            316
         BE    DELETEIT                YES; DELETE IT                    317
CKNXT1   DS    0H                                                        318
         LTR   R6,R6                   DOES NEXT BLOCK EXIST ?           319
         BZ    NODELETE                NO; DO NOT DELETE                 320
         LR    R7,R5                   SAVE ADDRESS PREVIOUS BLOCK       321
         LR    R5,R6                   POINT AT NEXT BLOCK               322
         B     CKNXTE1                 CHECK NEXT BLOCK                  323
DELETEIT DS    0H                                                        324
*        *---------------------------------------*                       325
*        *     DELETE DATA SPACE                 *                       326
*        *---------------------------------------*                       327
         MODESET MODE=SUP,             ..GET A SUPERVISOR STATE        X 328
               KEY=ZERO                ..ZERO KEY PSW                    329
*                                                                        330
         DSPSERV DELETE,               ..DELETE THE DATASPACE USING    X 331
               STOKEN=DSP_XSTOKEN,     ..THE STOKEN FROM DSPTBLE BLOCK X 332
               MF=(E,DSPLIST,COMPLETE)                                   333
         LTR   R15,R15                 RETURN CODE = 0?                  334
         BZ    CDELETE                 YES; CONTINUE                     335
NODELETE DS    0H                                                        336
         WTO   'DSPACE: DSPSERV DELETE FAILED'                           337
         B     DELERTNE                EXIT THIS SUBROUTINE              338
CDELETE  DS    0H                                                        339
*                                      ADDR NEW BLOCK INTO OLD BLOCK     340
         ST    R6,DSP_NEXT_ENTRY-DSPTBLE(R7)                             341
         MVC   WTOAREA(WTO2L),WTO2     MOVE WTO TO USER STORAGE          342
         MVC   WTO2VAR(L'WTO2VAR),OPERAND   MOVE DSPACE NAME TO WTO      343
         LA    R1,WTOAREA              ..ISSUE                           344
         WTO   ,MF=(E,(R1))            ..WTO                             345
*        *---------------------------------------*                       346
*        *     DELETE DSPTBLE BLOCK              *                       347
*        *---------------------------------------*                       348
         ICM   R15,B'0001',=AL1(ANKPOOL)  SUBPOOL OF DSPTBLE BLOCK       349
         LA    R0,LDSPTBLE             LENGTH OF BLOCK                   350
         STORAGE RELEASE,COND=YES,     FREE THE STORAGE FOR DSPTBLE    X 351
               LENGTH=(0),             LENGTH OF BLOCK                 X 352
               ADDR=(5),               ADDRESS OF BLOCK                X 353
               SP=(15)                 SUBPOOL OF BLOCK                  354
         LTR   R15,R15                 RC = 0?                           355
         BZ    DELERTNE                YES; EXIT THIS SUBROUTINE         356
         WTO   'DSPACE: STORAGE RELEASE FAILED'                          357
DELERTNE DS    0H                                                        358
         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE AND KEY PSW   359
         PR                            POP STACK AND RETURN              360
*---------------------------------------------------------------------*  361
*        EXIT ROUTINES                                                *  362
*---------------------------------------------------------------------*  363
EXIT00   DS    0H                      SUCCESSFUL                        364
         LA    15,X'00'                                                  365
         B     EXIT                                                      366
EXIT08   DS    0H                      INITIALIZATION FAILED             367
         PERCRC RC=X'08'                                                 368
         B     EXIT                                                      369
*---------------------------------------------------------------------*  370
*        COMMON EXIT                                                  *  371
*---------------------------------------------------------------------*  372
EXIT     DS   0H                                                         373
         ENDMOD                                                          374
*---------------------------------------------------------------------*  375
*        CONSTANTS                                                    *  376
*---------------------------------------------------------------------*  377
EYEID    DC    CL4'DS@P'               EYECATCHER IN DUMMY DSPSERV       378
QNAME    DC    CL8'DSPCDE'             QNAME FOR ENQ/DEQ                 379
DSPTNAME DC    CL8'DSPTAB00'           RNAME FOR ENQ/DEQ                 380
COMM1    DC    C'CREATE('              F DSPACE,CREATE - COMMAND TEXT    381
COMM2    DC    C'DELETE('              F DSPACE,DELETE - COMMAND TEXT    382
DSPBLOCK DC    A((DSPBYTES+4095)/4096) DATASPACE SIZE IN BLOCKS          383
DSPBYTES EQU   100000                  DATASPACE SIZE IN BYTES           384
WTO1     WTO   'DATASPACE CREATED.  NAME OF DATASPACE IS XXXXXXXX',MF=L  385
WTO1L    EQU   *-WTO1                  PARMLIST AND LENGTH FOR WTO       386
WTO1VAR  EQU   WTOAREA+4+41,8          WTO MODIFIED FIELD DISPLACEMENT   387
WTO2     WTO   'DATASPACE DELETED.  NAME OF DATASPACE IS XXXXXXXX',MF=L  388
WTO2L    EQU   *-WTO2                  PARMLIST AND LENGTH FOR WTO       389
WTO2VAR  EQU   WTOAREA+4+41,8          WTO MODIFIED FIELD DISPLACEMENT   390
KEY      DC    X'80'                   STORAGE KEY FOR DATASPACE         391
ANKPOOL  EQU   228                     SUBPOOL FOR ANCHOR                392
*---------------------------------------------------------------------*  393
*        WORK AREA                                                    *  394
*---------------------------------------------------------------------*  395
WDSPACE DSECT                                                            396
TRANSECB DS    F                       ECB FOR SYSEVENT                  397
         DSPSERV MF=(L,DSPLIST)        PARMLIST FOR DSPSERV              398
ALELIST  ALESERV MF=L                  PARMLIST FOR ALESERV              399
EXTLIST  EXTRACT ,MF=L                 PARMLIST FOR EXTRACT              400
PPGPARM  DS    CL(PPGNML)              PARMLIST FOR PGMNAME SERVICE      401
DSPALET  DS    F                       DATASPACE ALET                    402
DSPORG   DS    F                       DATASPACE ORIGIN                  403
DSPTOKEN DS    CL8                     DATASPACE STOKEN                  404
HOMETOKN DS    CL8                     HOME ASN TOKEN                    405
QEDANSW  DS    F                       RESPONSE FROM EXTRACT             406
ANKPARMS DS    0F,CL(LANKPRM)          PARMLIST FOR ANCHOR1 SERVICE      407
PARSAREA DS    CL100                   COMMAND PARSE AREA                408
WTOAREA  DS    0F,CL100                WTO                               409
OPERAND  DS    CL8                     OPERAND FROM COMMAND PARSE        410
HOMENAME DS    CL8                     HOME ADDRESS SPACE NAME           411
ENTRY1   DS    F                       ADDR FIRST ENTRY) IN DSPTABLE     412
LDSPACE EQU    *-WDSPACE               LENGTH OF THE WORK AREA           413
*---------------------------------------------------------------------*  414
*        OTHER DSECTS                                                 *  415
*---------------------------------------------------------------------*  416
         IEZCOM                        MAPPING FOR COMMUNICATIONS AREA   417
CIB      DSECT                         DSECT CARD FOR CIB                418
         IEZCIB                        MAPPING FOR COMMAND INPUT BUFFER  419
         ANKPRM                        MAP PARMLIST FOR ANCHOR SERVICE   420
         DSPTBLE                       MAP DSPTBLE ENTRY                 421
         PPGNM                         MAP PARMLIST FOR PGMNAME SERVICE  422
         END                                                             423
