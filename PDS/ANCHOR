*+--------------------------------------------------------------------+    1
*|  FUNCTION:                                                         |    2
*|      GET STORAGE FOR A CONTROL BLOCK AND ANCHOR IT IN AN LPAQ CDE. |    3
*|  LOGIC:                                                            |    4
*|      1)  SEARCH CDE'S ON LPAQ FOR CONTROL BLOCK CDE.               |    5
*|      2)  IF FOUND; VERIFY THAT EYECATCHER IS FIRST 4 BYTES.        |    6
*|      3)  IF CDE DOES NOT EXIST; GET SQA FOR CDE AND EXTENT LIST.   |    7
*|          BUILD CDE AND EXTENT LIST.                                |    8
*|      4)  GET CSA FOR CONTROL BLOCK.                                |    9
*|      5)  GET THE LOCAL AND CMS LOCKS TO SERIALIZE LPAQ.            |   10
*|      6)  PUT ADDRESS OF CONTROL BLOCK IN CDE AND EXTENT LIST.      |   11
*|      7)  IF CDE IS CREATED; CHAIN IT ONTO THE LPAQ.                |   12
*|      8)  RELEASE ALL LOCKS.                                        |   13
*|  INPUTS:                                                           |   14
*|      R1 - PARMLIST MAPPED BY ANKPRM MACRO.                         |   15
*|  OUTPUTS:                                                          |   16
*|      ADDRESS OF THE CONTROL BLOCK IN ANKEP FIELD OF PARMLIST.      |   17
*|      R15- RETURN CODE:                                             |   18
*|            0 = NEW CONTROL BLOCK HAS BEEN BUILT AND ANCHORED.      |   19
*|            4 = CONTROL BLOCK ALREADY EXISTS AND IS ANCHORED.       |   20
*|            8 = GETMAIN FAILED FOR CDE AND EXTENT LIST.             |   21
*|           12 = GETMAIN FAILED FOR CONTROL BLOCK.                   |   22
*|  ATTRIBUTES:                                                       |   23
*|      AMODE 31, RMODE ANY, REFRESHABLE, REQUIRES APF AUTHORIZATION  |   24
*+--------------------------------------------------------------------+   25
*+--------------------------------------------------------------------+
*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |
*|                                                                    |
*|  Address questions to: mmarx@mdpaladin.com                         |
*|                                                                    |
*|  Permission is hereby granted, free of charge, to any person       |
*|  obtaining a copy of this software and associated documentation    |
*|  files (the "Software"), to deal in the Software without           |
*|  restriction, including without limitation the rights to use,      |
*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |
*|  copies of the Software, and to permit persons to whom the         |
*|  Software is furnished to do so, subject to the following          |
*|  conditions:                                                       |
*|                                                                    |
*|  The above copyright notice and this permission notice shall be    |
*|  included in all copies or substantial portions of the Software.   |
*|                                                                    |
*|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   |
*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |
*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |
*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |
*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |
*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |
*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |
*|  OTHER DEALINGS IN THE SOFTWARE.                                   |
*+--------------------------------------------------------------------+
         MODULE ANCHOR,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  26
               TEXT='ANCHOR CONTROL BLOCK ON LPAQ'                        27
*        *---------------------------------------*                        28
*        *     MAP CONTROL BLOCKS USED           *                        29
*        *---------------------------------------*                        30
         USING CVT,R3                  COMMUNICATIONS VECTOR TABLE        31
         USING CDENTRY,R4              CONTENTS DIRECTORY ENTRY           32
         USING XTLST,R6                EXTENT LIST                        33
         USING ANKPRM,R10              USER PARMLIST                      34
         LR    R10,R1                  ADDRESS OF PARMLIST TO R10         35
*---------------------------------------------------------------------*   36
*        INVOKE IBM'S IEAQCDSR SERVICE TO SCAN FOR OUR CDE ON LPAQ.   *   37
*           INPUTS TO IEAQCDSR SERVICE:                               *   38
*             R8 - HEAD OF LPAQ IN CVT                                *   39
*             R9 - ADDRESS OF 8 BYTE FIELD WITH NAME OF CDE TO FIND   *   40
*           OUTPUTS:                                                  *   41
*             IF CDE FOUND;                                           *   42
*                INSTRUCTION AFTER BALR GETS CONTROL                  *   43
*                CDE ADDRESS IS IN R11                                *   44
*             IF CDE NOT FOUND;                                       *   45
*                INSTRUCTION 4 BYTES AFTER BALR GETS CONTROL          *   46
*---------------------------------------------------------------------*   47
         L     R3,CVTPTR               A(CVT) => R3                       48
         LA    R9,ANKNAME              A(CONTROL BLOCK NAME) => R9        49
         L     R8,CVTQLPAQ             HEAD OF LPAQ => R8                 50
         L     R15,CVTQCDSR            A(LPAQ SCAN ROUTINE)               51
         BALR  R14,R15                 INVOKE LPAQ SCAN ROUTINE           52
         B     FNDCDE                  CDE FOUND; PROCESS CDE             53
         B     GETSTOR                 NOT FOUND; GET STORAGE FOR CDE     54
*---------------------------------------------------------------------*   55
*        GET STORAGE FOR LPAQ CDE AND INITIALIZE CDE                  *   56
*---------------------------------------------------------------------*   57
GETSTOR  DS    0H                                                         58
         MODESET MODE=SUP,KEY=ZERO     GET A SUPERVISOR / KEY 0 PSW       59
         LA    R0,LCDE+LXTNT           LENGTH OF CDE + EXTENT LIST        60
         GETMAIN RC,                   GET SQA STORAGE FOR CDE AND XL  X  61
               LV=(R0),                LENGTH                          X  62
               SP=245,                 SUBPOOL                         X  63
               LOC=BELOW                                                  64
         LTR   R15,R15                 GETMAIN OK ?                       65
         BNZ   EXIT08                  NO; EXIT RC = 8                    66
         LR    R4,R1                   ADDRESS OF CDE => R4               67
         XC    0(LCDE+LXTNT,R4),0(R4)  INITIALIZE STORAGE TO X'00'        68
*        *---------------------------------------*                        69
*        *     INITIALIZE CDE                    *                        70
*        *---------------------------------------*                        71
         LA    R6,LCDE(R4)             A(EXTENT LIST)                     72
         ST    R6,CDXLMJP              PUT A(EXTENT LIST) INTO CDE        73
         MVC   CDNAME,ANKNAME          PUT CONTROL BLOCK NAME IN CDE      74
         OI    CDATTR,CDNIP+CDREN+CDSER+CDNLR  .. SET                     75
         OI    CDATTR2,CDXLE                   .. CDE FLAGS               76
*        *---------------------------------------*                        77
*        *     INITIALIZE XTENT LIST             *                        78
*        *---------------------------------------*                        79
         LA    R5,16                   .. LENGTH OF EXTENT LIST ENTRY     80
         ST    R5,XTLLNTH              .. INTO EXTENT LIST                81
         LA    R5,1                       .. RELOCATION FACTORS           82
         ST    R5,XTLNRFAC                .. INTO EXTENT LIST             83
         MVI   XTLMSBLA,X'80'                                             84
         MODESET MODE=PROB,KEY=NZERO   GET A PROBLEM STATE PSW            85
         OI    SW1,@NOCDE              SET SWITCH THERE IS NO CDE         86
         B     GETBLOCK                BRANCH TO OBTAIN CSA FOR BLOCK     87
*---------------------------------------------------------------------*   88
*        IF CDE FOUND, CHECK STORAGE IT POINTS TO FOR EYECATCHER      *   89
*---------------------------------------------------------------------*   90
FNDCDE   DS    0H                                                         91
         LR    R4,R11                  A( CDE ) FROM CVTQCDSR ROUTINE     92
         L     R5,CDENTPT              ENTRY POINT FROM CDE => R5         93
         CLC   0(L'ANKEYE,R5),ANKEYE   IS EYCATCHER FIRST BYTES?          94
         BNE   GETBLOCK                NO; AQUIRE STORAGE FOR BLOCK       95
         ST    R5,ANKEP                PUT ADDRESS IN PARMLIST            96
         B     EXIT04                  EXIT; CONTROL BLOCK EXISTS         97
*---------------------------------------------------------------------*   98
*        GET STORAGE FOR CONTROL BLOCK AND INITIALIZE STORAGE         *   99
*---------------------------------------------------------------------*  100
GETBLOCK DS    0H                                                        101
         XR    R15,R15                 SET REGISTER TO X'00'             102
         CLI   ANKSP,X'00'             IS PARMLIST SUBPOOL X'00' ?       103
         BNE   NSPDFLT                 NO; DO NOT SET FOR DEFAULT        104
         MVI   ANKSP,@ANKSP            SET DEFAULT IN PARMLIST           105
NSPDFLT  DS    0H                                                        106
         ICM   R15,B'0001',ANKSP       SET SUBPOOL FROM PARMLIST         107
         L     R0,ANKLEN               LENGTH OF ANCHORED DATA AREA      108
         TM    ANKFLAG1,@ANKBEL        BELOW THE LINE STORAGE?           109
         BO    GBELOW                  YES; GETMAIN BELOW 16MEG          110
         GETMAIN RC,                   GET STORAGE FOR CONTROL BLOCK   X 111
               LV=(0),                                                 X 112
               SP=(15),                                                X 113
               LOC=(ANY,ANY)                                             114
         LTR   R15,R15                 GETMAIN OK ?                      115
         BNZ   EXIT0C                  NO; EXIT RC= 12                   116
         B     AGET1                   BRANCH AROUND LOC=BELOW GETMAIN   117
GBELOW   DS    0H                                                        118
         GETMAIN RC,                   GET STORAGE FOR CONTROL BLOCK   X 119
               LV=(0),                                                 X 120
               SP=(15),                                                X 121
               LOC=BELOW                                                 122
         LTR   R15,R15                 GETMAIN OK ?                      123
         BNZ   EXIT0C                  NO; EXIT RC= 12                   124
AGET1    DS    0H                                                        125
         ST    R1,ADTBL                SAVE ADDRESS OF CONTROL BLOCK     126
         LR    R6,R1                   .. INITIALIZE                     127
         LR    R7,R0                   .. AQUIRED                        128
         XR    R8,R8                   .. STORAGE                        129
         XR    R9,R9                   .. TO                             130
         MVCL  R6,R8                   .. X'00'                          131
         MVC   0(L'ANKEYE,R1),ANKEYE   PUT EYECATCHER IN CONTROL BLOCK   132
         ST    R0,L'ANKEYE(R1)         PUT LENGTH OF BLOCK IN CNTL BLK   133
         MODESET MODE=SUP,KEY=ZERO     GET A SUPERVISOR STATE PSW        134
*        *---------------------------------------*                       135
*        *      GET THE LOCAL LOCK               *                       136
*        *---------------------------------------*                       137
         SETLOCK OBTAIN,               .. HOLDING                      X 138
               MODE=UNCOND,            .. THE LOCAL LOCK               X 139
               TYPE=LOCAL,             .. IS REQUIRED BEFORE           X 140
               REGS=USE,               .. GETTING THE CMS LOCK         X 141
               RELATED=REQUIRED                                          142
*        *---------------------------------------*                       143
*        *      GET CMS LOCK                     *                       144
*        *---------------------------------------*                       145
         SETLOCK OBTAIN,                                               X 146
               MODE=UNCOND,            .. GET                          X 147
               TYPE=CMS,               .. THE CMS LOCK                 X 148
               REGS=USE,               .. TO SERIALIZE                 X 149
               RELATED=REQUIRED        .. LPAQ                           150
         TM    SW1,@NOCDE              WAS CDE ABSENT ?                  151
         BNO   YESCDE                  NO; DO NOT CHAIN IN               152
*        *---------------------------------------*                       153
*        *     CHAIN CDE ONTO LPAQ               *                       154
*        *---------------------------------------*                       155
         L     R8,CVTQLPAQ             HEAD OF LPAQ => R8                156
         L     R5,CDCHAIN-CDENTRY(R8)  CHAIN FIELD IN FIRST CDE          157
         ST    R4,CDCHAIN-CDENTRY(R8)  A(NEW CDE) INTO CHAIN OF 1ST CDE  158
         ST    R5,CDCHAIN              A(NEXT CDE) INTO NEW CHAIN        159
YESCDE   DS    0H                                                        160
*        *---------------------------------------*                       161
*        *      PUT CONTROL BLOCK ADDRESS AND    *                       162
*        *      LENGTH INTO CDE AND EXTENT LIST  *                       163
*        *---------------------------------------*                       164
         L     R6,CDXLMJP              A(XTENT LIST)                     165
         L     R1,ADTBL                SAVE ADDRESS OF CONTROL BLOCK     166
         ST    R1,XTLMSBAD             PUT A(BLOCK) IN EXTENT LIST       167
         TM    ANKFLAG1,@ANKBEL        BELOW THE LINE STORAGE?           168
         BZ    SET31                   YES; DO NOT SET AMODE BIT IN CDE  169
         TM    ANKFLAG1,@ANK31         SET  BIT ENTRY POINT  ?           170
         BZ    GBELOW1                 NO;DO NOT SET 31BIT ENTRY IN CDE  171
SET31    DS    0H                                                        172
         O     R1,=A(X'80000000')      MAKE ENTRYPOINT ADDRESS 31 BIT    173
GBELOW1  DS    0H                                                        174
         ST    R1,CDENTPT              PUT A(CONTROL BLOCK) INTO CDE     175
         ST    R1,ANKEP                PUT ADDRESS IN PARMLIST           176
         L     R1,ANKLEN               LENGTH OF CONTROL BLOCK           177
         STCM  R1,B'0111',XTLMSBLN     PUT IN EXTENT LIST                178
*        *---------------------------------------*                       179
*        *      RELEASE ALL LOCKS                *                       180
*        *---------------------------------------*                       181
         SETLOCK RELEASE,              .. RELEASE                      X 182
               TYPE=ALL,               .. LOCAL                        X 183
               REGS=USE,               .. AND CMS                      X 184
               RELATED=REQUIRED        .. LOCKS                          185
         MODESET MODE=PROB,KEY=NZERO                                     186
         B     EXIT00                                                    187
*---------------------------------------------------------------------*  188
*        EXIT ROUTINES                                                *  189
*---------------------------------------------------------------------*  190
EXIT00   DS    0H                      NEW CONTROL BLOCK CREATED         191
         LA    15,X'00'                                                  192
         B     EXIT                                                      193
EXIT04   DS    0H                      CONTROL BLOCK EXISTS AND IS OK    194
         LA    15,X'04'                                                  195
         B     EXIT                                                      196
EXIT08   DS    0H                      GETMAIN FAILED FOR CDE AND XL     197
         LA    15,X'08'                                                  198
         B     EXIT                                                      199
EXIT0C   DS    0H                                                        200
         LA    15,X'0C'                GETMAIN FAILED FOR CONTROL BLOCK  201
         B     EXIT                                                      202
*---------------------------------------------------------------------*  203
*        COMMON EXIT                                                  *  204
*---------------------------------------------------------------------*  205
EXIT     DS   0H                                                         206
         ENDMOD                                                          207
*---------------------------------------------------------------------*  208
*        WORK AREA                                                    *  209
*---------------------------------------------------------------------*  210
WANCHOR  DSECT                                                           211
ADTBL    DS    A                       ADDRESS OF CONTROL BLOCK          212
SW1      DS    X                       SWITCH                            213
@NOCDE   EQU   B'10000000'             CDE DOES NOT EXIST                214
LANCHOR  EQU   *-WANCHOR                                                 215
*---------------------------------------------------------------------*  216
*        OTHER DSECTS                                                 *  217
*---------------------------------------------------------------------*  218
         ANKPRM                        MAP ANCHOR PARMLIST               219
         IHACDE                        MAP CDE                           220
LCDE     EQU   *-CDENTRY               LENGTH OF CDE                     221
         IHAXTLST                      MAP EXTENT LIST                   222
LXTNT    EQU   *-XTLST                 LENGTH OF EXTENT LIST             223
         CVT    DSECT=YES,LIST=YES     MAP CVT                           224
         IHAPSA DSECT=YES,LIST=YES     MAP PSA FOR SETLOCK               225
         END                                                             226
