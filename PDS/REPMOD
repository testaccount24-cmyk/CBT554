*+--------------------------------------------------------------------+    1
*|  FUNCTION:                                                         |    2
*|    ADD OR REPLACE MODULE ANCHORED IN LPAQ CDE.                     |    3
*|  LOGIC:                                                            |    4
*|    1) GET MODULE NAME FROM PARM=                                   |    5
*|    2) CALL UNANCH SERVICE TO UNANCHOR ANY EXISTING MODULE          |    6
*|    3) LOAD TARGET MODULE INTO PRIVATE STORAGE TO GET LENGTH        |    7
*|    4) DELETE MODULE FROM PRIVATE STORAGE                           |    8
*|    5) CALL ANCHOR SERVICE TO GET LPAQ ANCHORED STORAGE FOR MODULE  |    9
*|    6) ISSUE LOAD ADRNAPF FOR MODULE INTO LPAQ ANCHORED STORAGE     |   10
*|  INPUTS:                                                           |   11
*|    EXEC PARM=                                                      |   12
*|  OUTPUTS:                                                          |   13
*|    R15 - RETURN CODE                                               |   14
*|           0 - SUCCESSFUL ROUTINE                                   |   15
*|           8 - PARM= NOT SUPPLIED                                   |   16
*|          16 - VARIOUS LOAD ERRORS                                  |   17
*|          20 - UNANCH SERVICE FAILED                                |   18
*|          24 - LOAD OF NEW MODULE FAILED                            |   19
*|  ATTRIBUTES:                                                       |   20
*|    AMODE 31, RMODE ANY, APF-AUTHORIZED, REENTERABLE                |   21
*+--------------------------------------------------------------------+   22
*+--------------------------------------------------------------------+
*|  Copyright (c) 1992, 1993, 2002 by Mitchell Marx & Penelope Davis  |
*|                                                                    |
*|  Address questions to: mmarx@mdpaladin.com                         |
*|                                                                    |
*|  Permission is hereby granted, free of charge, to any person       |
*|  obtaining a copy of this software and associated documentation    |
*|  files (the "Software"), to deal in the Software without           |
*|  restriction, including without limitation the rights to use,      |
*|  copy, modify, merge, publish, distribute, sublicense, and/or sell |
*|  copies of the Software, and to permit persons to whom the         |
*|  Software is furnished to do so, subject to the following          |
*|  conditions:                                                       |
*|                                                                    |
*|  The above copyright notice and this permission notice shall be    |
*|  included in all copies or substantial portions of the Software.   |
*|                                                                    |
*|  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,   |
*|  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES   |
*|  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND          |
*|  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT       |
*|  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,      |
*|  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      |
*|  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR     |
*|  OTHER DEALINGS IN THE SOFTWARE.                                   |
*+--------------------------------------------------------------------+
         MODULE REPMOD,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  23
               TEXT='BUILD A MODULE IN LPAQ'                              24
*---------------------------------------------------------------------*   25
*        GET MODULE NAME FROM PARM=                                   *   26
*---------------------------------------------------------------------*   27
         LA    R5,ANKLIST              A(PARMLIST) => R5                  28
         USING ANKPRM,R5               MAP PARMLIST                       29
         MVI   ANKNAME,X'40'                 ..SET MODULE NAME            30
         MVC   ANKNAME+1(L'ANKNAME-1),ANKNAME ..TO SPACES                 31
         L     R1,0(R1)                ADDRESS OF PARM= STRING            32
         XR    R2,R2                   CLEAR R2                           33
         ICM   R2,B'0011',0(R1)        LENGTH OF PARM= STRING             34
         BZ    EXIT08                  =0; PROGAM NAME NOT GIVEN          35
         BCTR  R2,0                    LESS 1 FOR EXECUTE                 36
         EX    R2,MV1                  MOVE NAME TO GETASCB PARMLIST      37
         B     EX1                     BRANCH AROUND EXECUTE              38
MV1      MVC   ANKNAME(0),2(R1)        ** EXECUTE ONLY ***                39
EX1      DS    0H                                                         40
*---------------------------------------------------------------------*   41
*        CALL UNANCH - UNANCHOR CONTROL BLOCK FROM LPAQ               *   42
*---------------------------------------------------------------------*   43
         MVI   ANKSP,@ANKSP            SET DEFAULT SUBPOOL                44
         OI    ANKFLAG1,@ANKFREE       SET TO FREEMAIN STORAGE            45
         LOAD  EP=UNANCH,ERRET=EXIT10 LOAD UNANCH SERVICE ROUTINE         46
         LR    R15,R0                  ENTRYPOINT TO R15                  47
         LA    R1,ANKLIST              A(PARMLIST) => R1                  48
         BASSM R14,R15                 INVOKE SERVICE                     49
         C     R15,=F'8'               DID ANCHOR SERVICE FAIL ?          50
         BH    EXIT14                  YES; EXIT PERCOLATING RC           51
         DELETE EP=UNANCH              DELETE UNANCH SERVICE ROUTINE      52
*---------------------------------------------------------------------*   53
*        LOAD THE MODULE INTO PRIVATE STORAGE TO DETERMINE            *   54
*        LENGTH, AMODE AND RMODE.  THEN DELETE THE MODULE.            *   55
*---------------------------------------------------------------------*   56
         LOAD  EPLOC=ANKNAME,ERRET=EXIT10                                 57
         N     R1,=A(X'00FFFFFF')      TURN OFF NON-LENGTH BITS           58
         SLL   R1,3                    MULTIPLY LENGTH BY 8               59
         ST    R1,ANKLEN               LENGTH TO ANCHOR PARMLIST          60
         NI    ANKFLAG1,X'00'          CLEAR FLAGS BYTE                   61
         STCM  R0,B'1000',TESTBYTE     HIGH ORDER ADDRESS BYTE            62
         TM    TESTBYTE,B'01111111'    IS IT RMODE 24 ?                   63
         BNZ   T31                     NO; DO NOT GETMAIN 24-BIT          64
         OI    ANKFLAG1,@ANKBEL        SET ANCHOR TO GETMAIN 24BIT        65
         TM    TESTBYTE,B'10000000'    IS IT AMODE 31 ?                   66
         BZ    T31                     NO; LET CDE ENTRYPOINT BE 24 BIT   67
         OI    ANKFLAG1,@ANK31         MAKE SURE CDE HAS 31 BIT EP.       68
T31      DS    0H                                                         69
         DELETE EPLOC=ANKNAME          DELETE MODULE FROM PRIVATE         70
*---------------------------------------------------------------------*   71
*        GET STORAGE ANCHORED ON LPAQ FOR MODULE                      *   72
*---------------------------------------------------------------------*   73
         MVC   ANKEYE(L'ANKEYE),EYE    TABLE EYECATCHER TO PARMLIST       74
         XC    ANKEP(L'ANKEP),ANKEP    INITIALIZE ENTRYPOINT TO X'00'     75
         LOAD  EP=ANCHOR,ERRET=EXIT10  LOAD ANCHOR SERVICE ROUTINE        76
         LR    R15,R0                  ENTRYPOINT TO R15                  77
         LA    R1,ANKPRM               ADDRESS OF PARMLIST => R1          78
         BASSM R14,R15                 INVOKE SERVICE                     79
         C     R15,=F'8'               DID ANCHOR SERVICE FAIL ?          80
         BH    EXIT14                  YES; EXIT PERCOLATING RC           81
         DELETE EP=ANCHOR              DELETE ANCHOR SERVICE ROUTINE      82
*---------------------------------------------------------------------*   83
*        LOAD MODULE INTO ANCHORED STORAGE                            *   84
*---------------------------------------------------------------------*   85
         MVC   LOADLIB(LDCBD),LOADLIBD COPY DCB TO RENT STORAGE           86
         MVC   OLIST(LOLIST),MOLIST    COPY OPEN LIST TO RENT STORAGE     87
         L     R2,ANKEP                ADDRESS OF ANCHORED CONTROL STG    88
         LA    R3,LOADLIB              ADDRESS OF LOADLIB DCB             89
         LA    R4,ANKNAME              NAME OF THE MODULE IN LOADLIB      90
         OPEN  (LOADLIB,INPUT),MF=(E,OLIST)  OPEN THE LOADLIB             91
         MODESET MODE=SUP              GET A SUPERVISOR STATE PSW         92
         LOAD  EPLOC=(R4),ERRET=EXIT18,       ..LOAD THE MODULE INTO   X  93
               ADRNAPF=(R2),DCB=(R3),SF=(E,LLIST) ..ANCHORED STORAGE      94
         MODESET MODE=PROB             GO BACK INTO PROBLEM STATE         95
         CLOSE MF=(E,OLIST)            CLOSE THE LOADLIB DCB              96
         L     R0,ANKEP                LOAD THE MODULE ADDRESS => R0      97
         L     R1,ANKLEN               LOAD THE MODULE LENGTH  => R1      98
         MSTA  0                       PUT REGS R0 AND R1 INTO STACK      99
         B     EXIT00                                                    100
*---------------------------------------------------------------------*  101
*        EXIT ROUTINES                                                *  102
*---------------------------------------------------------------------*  103
EXIT00   DS    0H                      SUCCESSFUL                        104
         LA    15,X'00'                                                  105
         B     EXIT                                                      106
EXIT08   DS    0H                      PARM= NOT SUPPLIED                107
         LA    15,X'08'                                                  108
         B     EXIT                                                      109
EXIT10   DS    0H                      ONE OF VARIOUS LOADS FAILED       110
         PERCRC RC=X'10'                                                 111
         B     EXIT                                                      112
EXIT14   DS    0H                      UNANCHOR SERVICE FAILED           113
         PERCRC RC=X'14'                                                 114
         B     EXIT                                                      115
EXIT18   DS    0H                      LOAD OF NEW MODULE FAILED         116
         PERCRC RC=X'18'                                                 117
         B     EXIT                                                      118
*---------------------------------------------------------------------*  119
*        COMMON EXIT                                                  *  120
*---------------------------------------------------------------------*  121
EXIT     DS   0H                                                         122
         ENDMOD                                                          123
*---------------------------------------------------------------------*  124
*        CONSTANTS                                                    *  125
*---------------------------------------------------------------------*  126
EYE      DC    C'NULL'                 EYECATCHER REQUIRED BY ANCHOR     127
*---------------------------------------------------------------------*  128
*        DCB AND OPEN/CLOSE PARMLIST MODELS                           *  129
*---------------------------------------------------------------------*  130
LOADLIBD DCB   DSORG=PS,MACRF=GL,EODAD=EXIT,LRECL=256,                 X 131
               BLKSIZE=256,RECFM=FB,DDNAME=LOADLIB                       132
LDCBD    EQU   *-LOADLIBD              LENGTH OF DCB                     133
MOLIST   OPEN  (,),MF=L                OPEN/CLOSE PARMLIST               134
LOLIST   EQU   *-MOLIST                LENGTH OF OPEN/CLOSE PARMLIST     135
*---------------------------------------------------------------------*  136
*        WORK AREA                                                    *  137
*---------------------------------------------------------------------*  138
WREPMOD DSECT                                                            139
LOADLIB  DS    0F,CL(LDCBD)            LOADLIB DCB                       140
ANKLIST  DS    CL(LANKPRM)             PARMLIST FOR ANCHOR SERVICE       141
OLIST    DS    CL(LOLIST)              OPEN/CLOSE PARMLIST               142
TESTBYTE DS    X                       A BYTE FOR TEST                   143
LLIST    LOAD  ,SF=L                   PARMLIST FOR LOAD                 144
LREPMOD  EQU   *-WREPMOD                                                 145
*---------------------------------------------------------------------*  146
*        OTHER DSECTS                                                 *  147
*---------------------------------------------------------------------*  148
         ANKPRM                         MAP ANCHOR SERVICE PARMS         149
         END                                                             150
